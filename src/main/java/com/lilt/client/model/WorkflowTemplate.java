/*
 * Lilt REST API
 * Lilt REST API Support: https://lilt.atlassian.net/servicedesk/customer/portals    The Lilt REST API enables programmatic access to the full-range of Lilt backend services including:   * Training of and translating with interactive, adaptive machine translation   * Large-scale translation memory   * The Lexicon (a large-scale termbase)   * Programmatic control of the Lilt CAT environment   * Translation memory synchronization  Requests and responses are in JSON format. The REST API only responds to HTTPS / SSL requests.  The base url for this REST API is `https://api.lilt.com/`.  ## Authentication  Requests are authenticated via REST API key, which requires the Business plan.  Requests are authenticated using [HTTP Basic Auth](https://en.wikipedia.org/wiki/Basic_access_authentication). Add your REST API key as both the `username` and `password`.  For development, you may also pass the REST API key via the `key` query parameter. This is less secure than HTTP Basic Auth, and is not recommended for production use.  ## Quotas  Our services have a general quota of 4000 requests per minute. Should you hit the maximum requests per minute, you will need to wait 60 seconds before you can send another request. 
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.lilt.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.lilt.client.model.WorkflowStageTemplate;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

/**
 * A workflow template which defines the workflow&#39;s possible steps (combination of Translation, Review and Customer Review).
 */
@ApiModel(description = "A workflow template which defines the workflow's possible steps (combination of Translation, Review and Customer Review).")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-14T22:57:19.235Z[GMT]")
public class WorkflowTemplate {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private BigDecimal id;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_TEAM_ID = "TeamId";
  @SerializedName(SERIALIZED_NAME_TEAM_ID)
  private BigDecimal teamId;

  public static final String SERIALIZED_NAME_STAGES = "stages";
  @SerializedName(SERIALIZED_NAME_STAGES)
  private List<WorkflowStageTemplate> stages = null;


  public WorkflowTemplate id(BigDecimal id) {
    
    this.id = id;
    return this;
  }

   /**
   * Identifier of a teams Workflow template. Can be used during Job creation for specifying the workflow used for a job or language pair.
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "15", value = "Identifier of a teams Workflow template. Can be used during Job creation for specifying the workflow used for a job or language pair.")

  public BigDecimal getId() {
    return id;
  }


  public void setId(BigDecimal id) {
    this.id = id;
  }


  public WorkflowTemplate name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Translate > Review > Customer Review", value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public WorkflowTemplate teamId(BigDecimal teamId) {
    
    this.teamId = teamId;
    return this;
  }

   /**
   * The name of a given Workflow template.
   * @return teamId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "100", value = "The name of a given Workflow template.")

  public BigDecimal getTeamId() {
    return teamId;
  }


  public void setTeamId(BigDecimal teamId) {
    this.teamId = teamId;
  }


  public WorkflowTemplate stages(List<WorkflowStageTemplate> stages) {
    
    this.stages = stages;
    return this;
  }

  public WorkflowTemplate addStagesItem(WorkflowStageTemplate stagesItem) {
    if (this.stages == null) {
      this.stages = new ArrayList<WorkflowStageTemplate>();
    }
    this.stages.add(stagesItem);
    return this;
  }

   /**
   * The stages in this workflow template.
   * @return stages
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The stages in this workflow template.")

  public List<WorkflowStageTemplate> getStages() {
    return stages;
  }


  public void setStages(List<WorkflowStageTemplate> stages) {
    this.stages = stages;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WorkflowTemplate workflowTemplate = (WorkflowTemplate) o;
    return Objects.equals(this.id, workflowTemplate.id) &&
        Objects.equals(this.name, workflowTemplate.name) &&
        Objects.equals(this.teamId, workflowTemplate.teamId) &&
        Objects.equals(this.stages, workflowTemplate.stages);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, teamId, stages);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WorkflowTemplate {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    teamId: ").append(toIndentedString(teamId)).append("\n");
    sb.append("    stages: ").append(toIndentedString(stages)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

