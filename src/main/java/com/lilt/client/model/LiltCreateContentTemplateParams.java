/*
 * Lilt REST API
 * Lilt REST API Support: https://lilt.atlassian.net/servicedesk/customer/portals    The Lilt REST API enables programmatic access to the full-range of Lilt backend services including:   * Training of and translating with interactive, adaptive machine translation   * Large-scale translation memory   * The Lexicon (a large-scale termbase)   * Programmatic control of the Lilt CAT environment   * Translation memory synchronization  Requests and responses are in JSON format. The REST API only responds to HTTPS / SSL requests.  The base url for this REST API is `https://api.lilt.com/`.  ## Authentication  Requests are authenticated via REST API key, which requires the Business plan.  Requests are authenticated using [HTTP Basic Auth](https://en.wikipedia.org/wiki/Basic_access_authentication). Add your REST API key as both the `username` and `password`.  For development, you may also pass the REST API key via the `key` query parameter. This is less secure than HTTP Basic Auth, and is not recommended for production use.  ## Quotas  Our services have a general quota of 4000 requests per minute. Should you hit the maximum requests per minute, you will need to wait 60 seconds before you can send another request. 
 *
 * The version of the OpenAPI document: v3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.lilt.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * The template parameters of the content.
 */
@ApiModel(description = "The template parameters of the content.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-14T22:57:19.235Z[GMT]")
public class LiltCreateContentTemplateParams {
  public static final String SERIALIZED_NAME_CONTENT_LENGTH = "contentLength";
  @SerializedName(SERIALIZED_NAME_CONTENT_LENGTH)
  private Integer contentLength;

  public static final String SERIALIZED_NAME_MEMORY_ID = "memoryId";
  @SerializedName(SERIALIZED_NAME_MEMORY_ID)
  private Integer memoryId;

  public static final String SERIALIZED_NAME_LANGUAGE = "language";
  @SerializedName(SERIALIZED_NAME_LANGUAGE)
  private String language;

  public static final String SERIALIZED_NAME_SECTIONS = "sections";
  @SerializedName(SERIALIZED_NAME_SECTIONS)
  private List<String> sections = null;

  public static final String SERIALIZED_NAME_SUMMARY = "summary";
  @SerializedName(SERIALIZED_NAME_SUMMARY)
  private String summary;


  public LiltCreateContentTemplateParams contentLength(Integer contentLength) {
    
    this.contentLength = contentLength;
    return this;
  }

   /**
   * The length of the content.
   * @return contentLength
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The length of the content.")

  public Integer getContentLength() {
    return contentLength;
  }


  public void setContentLength(Integer contentLength) {
    this.contentLength = contentLength;
  }


  public LiltCreateContentTemplateParams memoryId(Integer memoryId) {
    
    this.memoryId = memoryId;
    return this;
  }

   /**
   * The ID referencing a Data Source.
   * @return memoryId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID referencing a Data Source.")

  public Integer getMemoryId() {
    return memoryId;
  }


  public void setMemoryId(Integer memoryId) {
    this.memoryId = memoryId;
  }


  public LiltCreateContentTemplateParams language(String language) {
    
    this.language = language;
    return this;
  }

   /**
   * The language of the content.
   * @return language
  **/
  @ApiModelProperty(required = true, value = "The language of the content.")

  public String getLanguage() {
    return language;
  }


  public void setLanguage(String language) {
    this.language = language;
  }


  public LiltCreateContentTemplateParams sections(List<String> sections) {
    
    this.sections = sections;
    return this;
  }

  public LiltCreateContentTemplateParams addSectionsItem(String sectionsItem) {
    if (this.sections == null) {
      this.sections = new ArrayList<String>();
    }
    this.sections.add(sectionsItem);
    return this;
  }

   /**
   * The sections of the content.
   * @return sections
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The sections of the content.")

  public List<String> getSections() {
    return sections;
  }


  public void setSections(List<String> sections) {
    this.sections = sections;
  }


  public LiltCreateContentTemplateParams summary(String summary) {
    
    this.summary = summary;
    return this;
  }

   /**
   * The summary of the content.
   * @return summary
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The summary of the content.")

  public String getSummary() {
    return summary;
  }


  public void setSummary(String summary) {
    this.summary = summary;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LiltCreateContentTemplateParams liltCreateContentTemplateParams = (LiltCreateContentTemplateParams) o;
    return Objects.equals(this.contentLength, liltCreateContentTemplateParams.contentLength) &&
        Objects.equals(this.memoryId, liltCreateContentTemplateParams.memoryId) &&
        Objects.equals(this.language, liltCreateContentTemplateParams.language) &&
        Objects.equals(this.sections, liltCreateContentTemplateParams.sections) &&
        Objects.equals(this.summary, liltCreateContentTemplateParams.summary);
  }

  @Override
  public int hashCode() {
    return Objects.hash(contentLength, memoryId, language, sections, summary);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LiltCreateContentTemplateParams {\n");
    sb.append("    contentLength: ").append(toIndentedString(contentLength)).append("\n");
    sb.append("    memoryId: ").append(toIndentedString(memoryId)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    sections: ").append(toIndentedString(sections)).append("\n");
    sb.append("    summary: ").append(toIndentedString(summary)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

