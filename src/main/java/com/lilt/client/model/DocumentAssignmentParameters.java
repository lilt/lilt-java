/*
 * Lilt REST API
 * The Lilt REST API enables programmatic access to the full-range of Lilt backend services including:   * Training of and translating with interactive, adaptive machine translation   * Large-scale translation memory   * The Lexicon (a large-scale termbase)   * Programmatic control of the Lilt CAT environment   * Translation memory synchronization  Requests and responses are in JSON format. The REST API only responds to HTTPS / SSL requests. ## Authentication Requests are authenticated via REST API key, which requires the Business plan.  Requests are authenticated using [HTTP Basic Auth](https://en.wikipedia.org/wiki/Basic_access_authentication). Add your REST API key as both the `username` and `password`.  For development, you may also pass the REST API key via the `key` query parameter. This is less secure than HTTP Basic Auth, and is not recommended for production use. 
 *
 * The version of the OpenAPI document: v2.0
 * Contact: support@lilt.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.lilt.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;

/**
 * DocumentAssignmentParameters
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-12-20T00:13:26.792Z[GMT]")
public class DocumentAssignmentParameters {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_IS_TRANSLATOR = "is_translator";
  @SerializedName(SERIALIZED_NAME_IS_TRANSLATOR)
  private Boolean isTranslator;

  public static final String SERIALIZED_NAME_IS_REVIEWER = "is_reviewer";
  @SerializedName(SERIALIZED_NAME_IS_REVIEWER)
  private Boolean isReviewer;

  public static final String SERIALIZED_NAME_DUE_DATE = "due_date";
  @SerializedName(SERIALIZED_NAME_DUE_DATE)
  private OffsetDateTime dueDate;


  public DocumentAssignmentParameters id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * A unique Document identifier.
   * @return id
  **/
  @ApiModelProperty(example = "46530", required = true, value = "A unique Document identifier.")

  public Integer getId() {
    return id;
  }


  public void setId(Integer id) {
    this.id = id;
  }


  public DocumentAssignmentParameters email(String email) {
    
    this.email = email;
    return this;
  }

   /**
   * An email address.
   * @return email
  **/
  @ApiModelProperty(example = "user@email.com", required = true, value = "An email address.")

  public String getEmail() {
    return email;
  }


  public void setEmail(String email) {
    this.email = email;
  }


  public DocumentAssignmentParameters isTranslator(Boolean isTranslator) {
    
    this.isTranslator = isTranslator;
    return this;
  }

   /**
   * If true, assign for translating. If false, then unassign.
   * @return isTranslator
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "If true, assign for translating. If false, then unassign.")

  public Boolean getIsTranslator() {
    return isTranslator;
  }


  public void setIsTranslator(Boolean isTranslator) {
    this.isTranslator = isTranslator;
  }


  public DocumentAssignmentParameters isReviewer(Boolean isReviewer) {
    
    this.isReviewer = isReviewer;
    return this;
  }

   /**
   * If true, assign for reviewing. If false, then unassign.
   * @return isReviewer
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "If true, assign for reviewing. If false, then unassign.")

  public Boolean getIsReviewer() {
    return isReviewer;
  }


  public void setIsReviewer(Boolean isReviewer) {
    this.isReviewer = isReviewer;
  }


  public DocumentAssignmentParameters dueDate(OffsetDateTime dueDate) {
    
    this.dueDate = dueDate;
    return this;
  }

   /**
   * Due date for translation or review (set based on &#x60;is_translator&#x60; and &#x60;is_reviewer&#x60; flags).
   * @return dueDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Due date for translation or review (set based on `is_translator` and `is_reviewer` flags).")

  public OffsetDateTime getDueDate() {
    return dueDate;
  }


  public void setDueDate(OffsetDateTime dueDate) {
    this.dueDate = dueDate;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DocumentAssignmentParameters documentAssignmentParameters = (DocumentAssignmentParameters) o;
    return Objects.equals(this.id, documentAssignmentParameters.id) &&
        Objects.equals(this.email, documentAssignmentParameters.email) &&
        Objects.equals(this.isTranslator, documentAssignmentParameters.isTranslator) &&
        Objects.equals(this.isReviewer, documentAssignmentParameters.isReviewer) &&
        Objects.equals(this.dueDate, documentAssignmentParameters.dueDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, email, isTranslator, isReviewer, dueDate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DocumentAssignmentParameters {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    isTranslator: ").append(toIndentedString(isTranslator)).append("\n");
    sb.append("    isReviewer: ").append(toIndentedString(isReviewer)).append("\n");
    sb.append("    dueDate: ").append(toIndentedString(dueDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

