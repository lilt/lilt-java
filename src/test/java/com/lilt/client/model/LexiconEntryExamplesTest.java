/*
 * Lilt REST API
 * The Lilt REST API enables programmatic access to the full-range of Lilt backend services including:   * Training of and translating with interactive, adaptive machine translation   * Large-scale translation memory   * The Lexicon (a large-scale termbase)   * Programmatic control of the Lilt CAT environment   * Translation memory synchronization  Requests and responses are in JSON format. The REST API only responds to HTTPS / SSL requests. ## Authentication Requests are authenticated via REST API key, which requires the Business plan.  Requests are authenticated using [HTTP Basic Auth](https://en.wikipedia.org/wiki/Basic_access_authentication). Add your REST API key as both the `username` and `password`.  For development, you may also pass the REST API key via the `key` query parameter. This is less secure than HTTP Basic Auth, and is not recommended for production use. 
 *
 * The version of the OpenAPI document: v2.0
 * Contact: support@lilt.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.lilt.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.lilt.client.model.LexiconEntrySourceSpan;
import com.lilt.client.model.LexiconEntryTargetSpan;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for LexiconEntryExamples
 */
public class LexiconEntryExamplesTest {
    private final LexiconEntryExamples model = new LexiconEntryExamples();

    /**
     * Model tests for LexiconEntryExamples
     */
    @Test
    public void testLexiconEntryExamples() {
        // TODO: test LexiconEntryExamples
    }

    /**
     * Test the property 'source'
     */
    @Test
    public void sourceTest() {
        // TODO: test source
    }

    /**
     * Test the property 'sourceDelimiters'
     */
    @Test
    public void sourceDelimitersTest() {
        // TODO: test sourceDelimiters
    }

    /**
     * Test the property 'target'
     */
    @Test
    public void targetTest() {
        // TODO: test target
    }

    /**
     * Test the property 'targetDelimiters'
     */
    @Test
    public void targetDelimitersTest() {
        // TODO: test targetDelimiters
    }

    /**
     * Test the property 'sourceSpan'
     */
    @Test
    public void sourceSpanTest() {
        // TODO: test sourceSpan
    }

    /**
     * Test the property 'targetSpan'
     */
    @Test
    public void targetSpanTest() {
        // TODO: test targetSpan
    }

    /**
     * Test the property 'similarity'
     */
    @Test
    public void similarityTest() {
        // TODO: test similarity
    }

    /**
     * Test the property 'memoryId'
     */
    @Test
    public void memoryIdTest() {
        // TODO: test memoryId
    }

}
