/*
 * Lilt REST API
 * The Lilt REST API enables programmatic access to the full-range of Lilt backend services including:   * Training of and translating with interactive, adaptive machine translation   * Large-scale translation memory   * The Lexicon (a large-scale termbase)   * Programmatic control of the Lilt CAT environment   * Translation memory synchronization  Requests and responses are in JSON format. The REST API only responds to HTTPS / SSL requests. ## Authentication Requests are authenticated via REST API key, which requires the Business plan.  Requests are authenticated using [HTTP Basic Auth](https://en.wikipedia.org/wiki/Basic_access_authentication). Add your REST API key as both the `username` and `password`.  For development, you may also pass the REST API key via the `key` query parameter. This is less secure than HTTP Basic Auth, and is not recommended for production use. 
 *
 * The version of the OpenAPI document: v2.0
 * Contact: support@lilt.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.lilt.api;

import com.lilt.ApiException;
import com.lilt.model.Error;
import com.lilt.model.Segment;
import com.lilt.model.SegmentCreateParameters;
import com.lilt.model.SegmentDeleteResponse;
import com.lilt.model.SegmentUpdateParameters;
import com.lilt.model.TaggedSegment;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SegmentsApi
 */
@Ignore
public class SegmentsApiTest {

    private final SegmentsApi api = new SegmentsApi();

    
    /**
     * Create a Segment
     *
     * Create a Segment and add it to a Memory. A Segment is a source/target pair that is used to train the machine translation system and populate the translation memory. This is not intended to be used on documents and will throw an error.  The maximum source length is 5,000 characters.  
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createSegmentTest() throws ApiException {
        SegmentCreateParameters body = null;
        Segment response = api.createSegment(body);

        // TODO: test validations
    }
    
    /**
     * Delete a Segment
     *
     * Delete a Segment from memory. This will not delete a segment from a document. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteSegmentTest() throws ApiException {
        Integer id = null;
        SegmentDeleteResponse response = api.deleteSegment(id);

        // TODO: test validations
    }
    
    /**
     * Retrieve a Segment
     *
     * Retrieve a Segment.  
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getSegmentTest() throws ApiException {
        Integer id = null;
        Segment response = api.getSegment(id);

        // TODO: test validations
    }
    
    /**
     * Tag a Segment
     *
     * Project tags for a segment. The &#x60;source_tagged&#x60; string contains one or more SGML tags. The &#x60;target&#x60; string is untagged. This endpoint will automatically place the source tags in the target.  Usage charges apply to this endpoint for production REST API keys.  
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void tagSegmentTest() throws ApiException {
        String sourceTagged = null;
        String target = null;
        Integer memoryId = null;
        TaggedSegment response = api.tagSegment(sourceTagged, target, memoryId);

        // TODO: test validations
    }
    
    /**
     * Update a Segment
     *
     * Update a Segment in memory. The Memory will be updated with the new target string.  
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateSegmentTest() throws ApiException {
        SegmentUpdateParameters body = null;
        Segment response = api.updateSegment(body);

        // TODO: test validations
    }
    
}
