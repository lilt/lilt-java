/*
 * Lilt REST API
 * The Lilt REST API enables programmatic access to the full-range of Lilt backend services including:   * Training of and translating with interactive, adaptive machine translation   * Large-scale translation memory   * The Lexicon (a large-scale termbase)   * Programmatic control of the Lilt CAT environment   * Translation memory synchronization  Requests and responses are in JSON format. The REST API only responds to HTTPS / SSL requests. ## Authentication Requests are authenticated via REST API key, which requires the Business plan.  Requests are authenticated using [HTTP Basic Auth](https://en.wikipedia.org/wiki/Basic_access_authentication). Add your REST API key as both the `username` and `password`.  For development, you may also pass the REST API key via the `key` query parameter. This is less secure than HTTP Basic Auth, and is not recommended for production use. 
 *
 * The version of the OpenAPI document: v2.0
 * Contact: support@lilt.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.lilt.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.lilt.model.DocumentWithoutSegmentsStatus;
import com.lilt.model.Segment;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for DocumentWithSegments
 */
public class DocumentWithSegmentsTest {
    private final DocumentWithSegments model = new DocumentWithSegments();

    /**
     * Model tests for DocumentWithSegments
     */
    @Test
    public void testDocumentWithSegments() {
        // TODO: test DocumentWithSegments
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'projectId'
     */
    @Test
    public void projectIdTest() {
        // TODO: test projectId
    }

    /**
     * Test the property 'srclang'
     */
    @Test
    public void srclangTest() {
        // TODO: test srclang
    }

    /**
     * Test the property 'trglang'
     */
    @Test
    public void trglangTest() {
        // TODO: test trglang
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'importInProgress'
     */
    @Test
    public void importInProgressTest() {
        // TODO: test importInProgress
    }

    /**
     * Test the property 'importSucceeded'
     */
    @Test
    public void importSucceededTest() {
        // TODO: test importSucceeded
    }

    /**
     * Test the property 'importErrorMessage'
     */
    @Test
    public void importErrorMessageTest() {
        // TODO: test importErrorMessage
    }

    /**
     * Test the property 'exportInProgress'
     */
    @Test
    public void exportInProgressTest() {
        // TODO: test exportInProgress
    }

    /**
     * Test the property 'exportSucceeded'
     */
    @Test
    public void exportSucceededTest() {
        // TODO: test exportSucceeded
    }

    /**
     * Test the property 'exportErrorMessage'
     */
    @Test
    public void exportErrorMessageTest() {
        // TODO: test exportErrorMessage
    }

    /**
     * Test the property 'isPretranslating'
     */
    @Test
    public void isPretranslatingTest() {
        // TODO: test isPretranslating
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'translatorEmail'
     */
    @Test
    public void translatorEmailTest() {
        // TODO: test translatorEmail
    }

    /**
     * Test the property 'reviewerEmail'
     */
    @Test
    public void reviewerEmailTest() {
        // TODO: test reviewerEmail
    }

    /**
     * Test the property 'createdAt'
     */
    @Test
    public void createdAtTest() {
        // TODO: test createdAt
    }

    /**
     * Test the property 'updatedAt'
     */
    @Test
    public void updatedAtTest() {
        // TODO: test updatedAt
    }

    /**
     * Test the property 'segments'
     */
    @Test
    public void segmentsTest() {
        // TODO: test segments
    }

}
