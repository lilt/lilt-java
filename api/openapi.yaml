openapi: 3.0.1
info:
  description: "Lilt REST API Support: https://lilt.atlassian.net/servicedesk/customer/portals\
    \   \nThe Lilt REST API enables programmatic access to the full-range of Lilt\
    \ backend services including:\n  * Training of and translating with interactive,\
    \ adaptive machine translation\n  * Large-scale translation memory\n  * The Lexicon\
    \ (a large-scale termbase)\n  * Programmatic control of the Lilt CAT environment\n\
    \  * Translation memory synchronization\n\nRequests and responses are in JSON\
    \ format. The REST API only responds to HTTPS / SSL requests. \nThe base url for\
    \ this REST API is `https://api.lilt.com/`.\n\n## Authentication\n\nRequests are\
    \ authenticated via REST API key, which requires the Business plan.\n\nRequests\
    \ are authenticated using [HTTP Basic Auth](https://en.wikipedia.org/wiki/Basic_access_authentication).\
    \ Add your REST API key as both the `username` and `password`.\n\nFor development,\
    \ you may also pass the REST API key via the `key` query parameter. This is less\
    \ secure than HTTP Basic Auth, and is not recommended for production use.\n\n\
    ## Quotas\n\nOur services have a general quota of 4000 requests per minute. Should\
    \ you hit the maximum requests per minute, you will need to wait 60 seconds before\
    \ you can send another request.\n"
  license:
    name: Lilt Platform Terms and Conditions
    url: https://lilt.com/lilt-platform-terms-and-conditions
  title: Lilt REST API
  version: v3.0.1
servers:
- url: https://api.lilt.com
security:
- ApiKeyAuth: []
- BasicAuth: []
paths:
  /v2/languages:
    get:
      description: |+
        Get a list of supported languages.

      operationId: getLanguages
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LanguagesResponse'
          description: An object listing supported languages and their corresponding
            locales.
        "401":
          content:
            application/octet-stream:
              schema:
                type: string
            text/plain:
              schema:
                type: string
          description: Unauthorized
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Retrieve supported languages
      tags:
      - Languages
      x-accepts: application/json
  /v2/memories:
    delete:
      description: |
        Delete a Memory.
      operationId: deleteMemory
      parameters:
      - description: A unique Memory identifier.
        explode: true
        in: query
        name: id
        required: true
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemoryDeleteResponse'
          description: A status object.
        "401":
          content:
            application/octet-stream:
              schema:
                type: string
            text/plain:
              schema:
                type: string
          description: Unauthorized
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Delete a Memory
      tags:
      - Memories
      x-accepts: application/json
    get:
      description: |+
        Retrieve a Memory. If you cannot access the Memory (401 error) please check permissions (e.g. in case you created the Memory via the web app with a different account you may have to explicitly share that Memory).

      operationId: getMemory
      parameters:
      - description: An optional Memory identifier.
        explode: true
        in: query
        name: id
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Memory'
                title: MemoryResponse
                type: array
          description: A list of Memory objects.
        "401":
          content:
            application/octet-stream:
              schema:
                type: string
            text/plain:
              schema:
                type: string
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Memory not found.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Retrieve a Memory
      tags:
      - Memories
      x-accepts: application/json
    post:
      description: |+
        Create a new Memory. A Memory is a container that collects source/target
        sentences for a specific language pair (e.g., English>French). The data
        in the Memory is used to train the MT system, populate the TM, and
        update the lexicon. Memories are private to your account - the data is
        not shared across users - unless you explicitly share a Memory with your
        team (via web app only).

        <a href="https://support.lilt.com/hc/en-us/sections/360012579193-Lilt-Translate-Engine" target=_blank>Refer
        to our KB</a> for a more detailed description.

      operationId: createMemory
      requestBody:
        $ref: '#/components/requestBodies/MemoryCreateParameters'
        content:
          application/json:
            schema:
              example:
                trglocale: FR
                name: automotive
                srclang: en
                srclocale: US
                trglang: fr
              properties:
                name:
                  description: A name for the Memory.
                  example: automotive
                  type: string
                srclang:
                  description: An ISO 639-1 language identifier.
                  example: en
                  type: string
                trglang:
                  description: An ISO 639-1 language identifier.
                  example: fr
                  type: string
                srclocale:
                  description: An ISO 3166-1 region name for language locales
                  example: US
                  type: string
                trglocale:
                  description: An ISO 3166-1 region name for language locales
                  example: FR
                  type: string
              required:
              - name
              - srclang
              - trglang
              title: MemoryCreateParameters
              type: object
        description: The Memory resource to create.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Memory'
          description: A Memory object.
        "401":
          content:
            application/octet-stream:
              schema:
                type: string
            text/plain:
              schema:
                type: string
          description: Unauthorized
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Create a Memory
      tags:
      - Memories
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
    put:
      description: |
        Update a Memory.
      operationId: updateMemory
      requestBody:
        $ref: '#/components/requestBodies/MemoryUpdateParameters'
        content:
          application/json:
            schema:
              example:
                name: Automotive Memory
                id: 7246
              properties:
                id:
                  description: A unique Memory identifier.
                  example: 7246
                  type: integer
                name:
                  description: The Memory name.
                  example: Automotive Memory
                  type: string
              required:
              - id
              - name
              title: MemoryUpdateParameters
              type: object
        description: The Memory resource to update.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Memory'
          description: A Memory object.
        "401":
          content:
            application/octet-stream:
              schema:
                type: string
            text/plain:
              schema:
                type: string
          description: Unauthorized
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Update the name of a Memory
      tags:
      - Memories
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /v2/memories/query:
    get:
      description: |
        Perform a translation memory query.
      operationId: queryMemory
      parameters:
      - description: A unique Memory identifier.
        explode: true
        in: query
        name: id
        required: true
        schema:
          type: integer
        style: form
      - description: A source query.
        explode: true
        in: query
        name: query
        required: true
        schema:
          type: string
        style: form
      - description: Maximum number of results to return.
        explode: true
        in: query
        name: "n"
        required: false
        schema:
          default: 10
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TranslationMemoryEntry'
                title: MemoryQueryResponse
                type: array
          description: A list of TranslationMemoryEntry objects.
        "401":
          content:
            application/octet-stream:
              schema:
                type: string
            text/plain:
              schema:
                type: string
          description: Unauthorized
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Query a Memory
      tags:
      - Memories
      x-accepts: application/json
  /v2/memories/import:
    post:
      description: |+
        Imports common translation memory or termbase file formats to a specific Lilt memory. Currently supported file formats are `*.tmx`, `*.sdltm`, `*.sdlxliff`(With custom Filters), '*.xliff', and `*.tmq` for TM data; `*.csv` and `*.tbx` for termbase data. Request parameters should be passed as JSON object with the header field `LILT-API`.

        Example CURL command to upload a translation memory file named `my_memory.sdltm` in the current working directory:
        ```bash
          curl -X POST https://api.lilt.com/v2/memories/import?key=API_KEY \
            --header "LILT-API: {\"name\": \"my_memory.sdltm\",\"memory_id\": 42}" \
            --header "Content-Type: application/octet-stream" \
            --data-binary @my_memory.sdltm
        ```

        Example CURL command to upload a translation memory file named `my_memory.sdlxliff` in the current working directory, with Custom Filters based on SDLXLIFF fields, conf_name which maps to, percentage, and whether we should ignore unlocked segments.
        ```bash
          curl -X POST https://api.lilt.com/v2/memories/import?key=API_KEY \
            --header "LILT-API: {\"name\": \"my_memory.sdlxliff\",\"memory_id\": 12,\"sdlxliff_filters\":[{\"conf_name\": \"Translated\", \"percentage\": 100, \"allow_unlocked\": false}]"}" \
            --header "Content-Type: application/octet-stream" \
            --data-binary @my_memory.sdlxliff
        ```

      operationId: importMemoryFile
      parameters:
      - description: A unique Memory identifier.
        explode: false
        in: header
        name: memory_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Name of the TM or termbase file.
        explode: false
        in: header
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: Contains Filter information Unique to SDLXLIFF
        explode: false
        in: header
        name: sdlxliff_filters
        required: false
        schema:
          items:
            $ref: '#/components/schemas/SDLXLIFFFilter'
          type: array
        style: simple
      - description: A flag indicating whether an imported Termbase CSV has a header
          row or not (the default value is `false`).
        explode: false
        in: header
        name: has_header_row
        required: false
        schema:
          type: boolean
        style: simple
      - description: |
          A flag indicating whether or not to skip the import of segments
          which already exist in the memory. (the default value is `false`).
        explode: false
        in: header
        name: skip_duplicates
        required: false
        schema:
          type: boolean
        style: simple
      requestBody:
        content:
          application/octet-stream:
            schema:
              format: binary
              title: MemoryImportBody
              type: string
        description: The file contents to be uploaded. The entire POST body will be
          treated as the file.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemoryImportResponse'
          description: A status object.
        "401":
          content:
            application/octet-stream:
              schema:
                type: string
            text/plain:
              schema:
                type: string
          description: Unauthorized
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: File import for a Memory
      tags:
      - Memories
      x-codegen-request-body-name: body
      x-contentType: application/octet-stream
      x-accepts: application/json
  /v2/memories/termbase/export:
    post:
      description: |
        Exports the termbase entries for the given memory into a CSV file.

        Calling this endpoint will begin the export process in the background.
        Check that the processing is complete by polling the `GET /2/memories`
        endpoint. When the `is_processing` value is 0 then call the
        `POST /2/memories/termbase/download` endpoint.

        ```bash
          curl -X POST https://api.lilt.com/v2/memories/termbase/export?key=API_KEY&id=ID
        ```
      operationId: exportTermbase
      parameters:
      - description: A unique Memory identifier.
        explode: true
        in: query
        name: id
        required: true
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TermbaseExportResponse'
          description: A status object.
        "401":
          content:
            application/octet-stream:
              schema:
                type: string
            text/plain:
              schema:
                type: string
          description: Unauthorized
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Termbase export for a Memory
      tags:
      - Memories
      x-accepts: application/json
  /v2/memories/termbase/download:
    get:
      description: |
        Downloads the termbase export for the given memory as a CSV file.

        Ensure you first call the `/2/memories/termbase/export` endpoint to
        start the export process before you try to download it.

        ```bash
          curl -X GET https://api.lilt.com/v2/memories/termbase/download?key=API_KEY&id=ID
        ```
      operationId: downloadTermbase
      parameters:
      - description: A unique Memory identifier.
        explode: true
        in: query
        name: id
        required: true
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                format: byte
                title: TermbaseDownloadResponse
                type: string
          description: A file.
        "401":
          content:
            application/octet-stream:
              schema:
                type: string
            text/plain:
              schema:
                type: string
          description: Unauthorized
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Termbase download for a Memory
      tags:
      - Memories
      x-accepts: application/json
  /v2/memories/segment:
    delete:
      description: |
        Delete a segment from a memory.

        ```bash
          curl -X DELETE https://api.lilt.com/v2/memories/segment?key=API_KEY&id=ID&segment_id=$SEGMENT_ID
        ```
      operationId: deleteSegmentFromMemory
      parameters:
      - description: A unique Memory identifier.
        explode: true
        in: query
        name: id
        required: true
        schema:
          type: integer
        style: form
      - description: A unique Segment identifier.
        explode: true
        in: query
        name: segment_id
        required: true
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSegmentFromMemoryResponse'
          description: A success resposne.
        "401":
          content:
            application/octet-stream:
              schema:
                type: string
            text/plain:
              schema:
                type: string
          description: Unauthorized
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Delete a segment from a memory.
      tags:
      - Memories
      x-accepts: application/json
  /v2/translate:
    post:
      description: |+
        Translate a source string.

        Setting the `rich` parameter to `true` will change the response format
        to include additional information about each translation including a
        model score, word alignments,  and formatting information. The rich
        format can be seen in the example response on this page.

        By default, this endpoint also returns translation memory (TM) fuzzy matches, along
        with associated scores. Fuzzy matches always appear ahead of machine translation
        output in the response.

        The maximum source length is 5,000 characters.

        Usage charges apply to this endpoint for production REST API keys.

      operationId: translateSegmentPost
      requestBody:
        $ref: '#/components/requestBodies/TranslateSegmentBody'
        content:
          application/json:
            schema:
              example:
                memory_id: 0
                tm_matches: true
                prefix: prefix
                containsICUData: false
                rich: false
                source: source
                source_hash: 6
                n: 1
                project_tags: false
              properties:
                source:
                  description: A unique Segment identifier.
                  type: string
                memory_id:
                  description: A unique Memory identifier.
                  type: integer
                source_hash:
                  description: A source hash code.
                  type: integer
                n:
                  description: Return top n translations (deprecated).
                  type: integer
                prefix:
                  description: A target prefix
                  type: string
                rich:
                  default: false
                  description: Returns rich translation information (e.g., with word
                    alignments).
                  type: boolean
                tm_matches:
                  default: true
                  description: Include translation memory fuzzy matches.
                  type: boolean
                project_tags:
                  default: false
                  description: Project tags. Projects tags in source to target if
                    set to true.
                  type: boolean
                containsICUData:
                  default: false
                  description: Contains ICU data. If true then tags in the source
                    following the ICU standard will be parsed and retained.
                  type: boolean
              required:
              - memory_id
              title: TranslateSegmentBody
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TranslationList'
          description: A TranslationList object.
        "401":
          content:
            application/octet-stream:
              schema:
                type: string
            text/plain:
              schema:
                type: string
          description: Unauthorized
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Translate a segment
      tags:
      - Translate
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /v2/translate/file:
    get:
      description: |+
        Get information about the one or more Files that are being translated with machine translation. Query filters are optional but at least one must be provided.

        Example CURL:
        ```bash
        curl -X GET 'https://api.lilt.com/v2/translate/file?key=API_KEY&translationIds=1,2&fromTime=1607966744&toTime=1707966744&status=InProgress'
        ```

      operationId: monitorFileTranslation
      parameters:
      - description: List of translation ids, comma separated
        explode: true
        in: query
        name: translationIds
        required: false
        schema:
          type: string
        style: form
      - description: One of the translation statuses - `InProgress`, `Completed`,
          `Failed`, `ReadyForDownload`
        explode: true
        in: query
        name: status
        required: false
        schema:
          type: string
        style: form
      - description: Results after this time (inclusive) will be returned, specified
          as seconds since the Unix epoch.
        explode: true
        in: query
        name: fromTime
        required: false
        schema:
          type: number
        style: form
      - description: Results before this time (exclusive) will be returned, specified
          as seconds since the Unix epoch.
        explode: true
        in: query
        name: toTime
        required: false
        schema:
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                description: List of TranslationInfo objects
                items:
                  $ref: '#/components/schemas/TranslationInfo'
                title: monitorFileTranslationResponse
                type: array
          description: Translation Info
        "401":
          content:
            application/octet-stream:
              schema:
                type: string
            text/plain:
              schema:
                type: string
          description: Unauthorized
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitorFileTranslationTypeError'
          description: Unexpected error
      summary: Monitor file translation
      tags:
      - Translate
      x-accepts: application/json
    post:
      description: |+
        Start machine translation of one or more Files that have previously been uploaded.  The response will include an `id` parameter that can be used to monitor and download the translations in subsequent calls.

        Example CURL:
        ```bash
        curl -X POST 'https://api.lilt.com/v2/translate/file?key=API_KEY&fileId=583&memoryId=2495&configId=123&withTM=true'
        ```

      operationId: batchTranslateFile
      parameters:
      - description: List of File ids to be translated, comma separated.
        explode: true
        in: query
        name: fileId
        required: true
        schema:
          type: string
        style: form
      - description: Id of Memory to use in translation.
        explode: true
        in: query
        name: memoryId
        required: true
        schema:
          type: string
        style: form
      - description: An optional pararameter to specify an import configuration to
          be applied when extracting translatable content from this file.
        explode: true
        in: query
        name: configId
        required: false
        schema:
          type: number
        style: form
      - description: An optional boolean parameter to toggle the use of Translation
          Memory in the translation of the file.
        explode: true
        in: query
        name: withTM
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                description: List of TranslationInfo objects
                items:
                  $ref: '#/components/schemas/TranslationInfo'
                title: batchTranslateFileResponse
                type: array
          description: Translation Info
        "401":
          content:
            application/octet-stream:
              schema:
                type: string
            text/plain:
              schema:
                type: string
          description: Unauthorized
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Translate a File
      tags:
      - Translate
      x-accepts: application/json
  /v2/translate/files:
    get:
      description: |+
        Download a translated File.

        Example CURL:
        ```bash
        curl -X GET 'https://api.lilt.com/v2/translate/files?key=API_KEY&id=1'
        ```

      operationId: downloadFile
      parameters:
      - description: A translation id.
        explode: true
        in: query
        name: id
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: byte
                title: DocumentDownloadResponse
                type: string
          description: A file.
        "401":
          content:
            application/octet-stream:
              schema:
                type: string
            text/plain:
              schema:
                type: string
          description: Unauthorized
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Download translated file
      tags:
      - Translate
      x-accepts: application/json
  /v2/create/terms-and-conditions:
    post:
      description: |+
        Lilt Create requires that the terms and conditions are signed first
        before using it. The terms and conditions can be signed by using this
        endpoint.

        Example CURL:
        ```bash
        curl -X POST 'https://api.lilt.com/v2/create/terms-and-conditions?key=API_KEY' \
        --header 'Content-Type: application/json' \
        --data-raw '{"signedAgreement": true}'
        ```

      operationId: signLiltCreateTerms
      requestBody:
        $ref: '#/components/requestBodies/CreateConverterConfigParameters'
        content:
          application/json:
            schema:
              example:
                signedAgreement: true
              properties:
                signedAgreement:
                  description: Signifies that the Organization has signed the agreement
                    or not.
                  type: boolean
              required:
              - signedAgreement
              title: CreateConverterConfigParameters
              type: object
        description: Whether or not to sign the agreement.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/signLiltCreateTermsResponse'
          description: |
            An object indicating whether the agreement has been signed or not.
        "401":
          content:
            application/octet-stream:
              schema:
                type: string
            text/plain:
              schema:
                type: string
          description: Unauthorized
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Sign the Lilt Create terms and conditions
      tags:
      - Create
      x-codegen-request-body-name: signedAgreement
      x-contentType: application/json
      x-accepts: application/json
  /v2/create:
    get:
      description: |+
        Get a list of all content that has been generated by Lilt Create.

        Example CURL:
        ```bash
        curl -X GET 'https://api.lilt.com/v2/create?key=API_KEY'
        ```

      operationId: getLiltCreateContent
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getLiltCreateContentResponse'
          description: An object with a documents next task Workflow metadata.
        "401":
          content:
            application/octet-stream:
              schema:
                type: string
            text/plain:
              schema:
                type: string
          description: Unauthorized
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Get Lilt Create content
      tags:
      - Create
      x-accepts: application/json
    post:
      description: |+
        Generate new Lilt Create content with the given parameters.

        Example CURL:
        ```bash
        curl -X POST 'https://api.lilt.com/v2/create?key=API_KEY' \
        --header 'Content-Type: application/json' \
        --data-raw '{
          "language":"en-US",
          "template":"blog-post",
          "templateParams":{
            "contentLength":"100",
            "language":"en-US",
            "sections":[],
            "summary":"a blog post about hiking"
            },
          "preferences":{"tone":"formal","styleguide":""}
        }'
        ```

      operationId: generateLiltCreateContent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LiltCreateContentRequest'
        description: |
          Input parameters that determine what content will be generated.
        required: true
      responses:
        "200":
          content: {}
          description: |
            An event stream produced by Server Side Events. The following
            events are supported.
            - message: an object with the newly generated text (e.g. {"text": "hello"})
            - message: upon completion of events the string "[DONE]" will be emitted
            - fullcontent: an object containing the full response
        "401":
          content:
            application/octet-stream:
              schema:
                type: string
            text/plain:
              schema:
                type: string
          description: Unauthorized
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Generate new Lilt Create content
      tags:
      - Create
      x-codegen-request-body-name: templateParams
      x-contentType: application/json
      x-accepts: application/json
  /v2/create/preferences:
    get:
      description: |+
        Get the stored preferences for Lilt Create.

        Example CURL:
        ```bash
        curl -X POST 'https://api.lilt.com/v2/create/preferences?key=API_KEY'
        ```

      operationId: getLiltCreatePreferences
      responses:
        "200":
          content: {}
          description: An object describing the stored preferences.
        "401":
          content:
            application/octet-stream:
              schema:
                type: string
            text/plain:
              schema:
                type: string
          description: Unauthorized
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Get Lilt Create preferences
      tags:
      - Create
      x-accepts: application/json
    put:
      description: |+
        Update the stored preferences for Lilt Create.

        Example CURL:
        ```bash
        curl -X PUT
        'https://api.lilt.com/v2/create/preferences?key=API_KEY' \
        --header 'Content-Type: application/json' \
        --data-raw '{"tone": "formal", "styleguide": ""}'
        ```

      operationId: updateLiltCreatePreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LiltCreateContent'
        description: Which styleguide to use.
        required: false
      responses:
        "200":
          content: {}
          description: The updated Lilt Create preferences.
        "401":
          content:
            application/octet-stream:
              schema:
                type: string
            text/plain:
              schema:
                type: string
          description: Unauthorized
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Update Lilt Create preferences
      tags:
      - Create
      x-codegen-request-body-name: styleguide
      x-contentType: application/json
      x-accepts: application/json
  /v2/create/{contentId}:
    delete:
      description: |+
        Delete a piece of Lilt Create content.

        Example CURL:
        ```bash
        curl -X DELETE 'https://api.lilt.com/v2/create/1234?key=API_KEY'
        ```

      operationId: deleteLiltCreateContent
      parameters:
      - description: The content ID.
        explode: false
        in: path
        name: contentId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
          description: The Delete Lilt Create Content Response.
        "401":
          content:
            application/octet-stream:
              schema:
                type: string
            text/plain:
              schema:
                type: string
          description: Unauthorized
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Delete Lilt Create content
      tags:
      - Create
      x-accepts: application/json
    get:
      description: |+
        Get Lilt Create content by ID.

        Example CURL:
        ```bash
        curl -X GET 'https://api.lilt.com/v2/create/1234?key=API_KEY'
        ```

      operationId: getLiltCreateById
      parameters:
      - description: The content ID.
        explode: false
        in: path
        name: contentId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiltCreateContent'
          description: The Lilt Create content.
        "401":
          content:
            application/octet-stream:
              schema:
                type: string
            text/plain:
              schema:
                type: string
          description: Unauthorized
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Get Lilt Create content by ID.
      tags:
      - Create
      x-accepts: application/json
    put:
      description: |+
        Update a piece of Lilt Create content.

        Example CURL:
        ```bash
        curl -X PUT 'https://api.lilt.com/v2/create/1234?key=API_KEY' \
        --header 'Content-Type: application/json' \
        --data-raw '{"language":"de-DE"}'
        ```

      operationId: updateLiltCreateContent
      parameters:
      - description: The content ID.
        explode: false
        in: path
        name: contentId
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LiltCreateContent'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiltCreateContent'
          description: The updated Lilt Create content.
        "401":
          content:
            application/octet-stream:
              schema:
                type: string
            text/plain:
              schema:
                type: string
          description: Unauthorized
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Update Lilt Create content
      tags:
      - Create
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /v2/create/{contentId}/create:
    get:
      description: |+
        Regenerate the given piece of content with the current parameters.

        Example CURL:
        ```bash
        curl -X GET 'https://api.lilt.com/v2/create/1234/create?key=API_KEY'
        ```

      operationId: regenerateLiltCreateContent
      parameters:
      - description: The content ID.
        explode: false
        in: path
        name: contentId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content: {}
          description: |
            An event stream produced by Server Side Events. The following
            events are supported.
            - message: an object with the newly generated text (e.g. {"text": "hello"})
            - message: upon completion of events the string "[DONE]" will be emitted
            - fullcontent: an object containing the full response
        "401":
          content:
            application/octet-stream:
              schema:
                type: string
            text/plain:
              schema:
                type: string
          description: Unauthorized
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Regenerate Lilt Create content
      tags:
      - Create
      x-accepts: application/json
  /v2/workflows/templates:
    get:
      description: |
        Get all of the possible Workflow Templates owned by the team. Useful for retrieving the ids corresponding to each workflow tables, and passing them to subsequent requests, for example, creating a new Job with a specific Workflow.
        Example CURL:
        ```bash curl -X GET 'https://api.lilt.com/v2/workflows/templates?key=API_KEY' ```
      operationId: getWorkflowTemplates
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WorkflowTemplate'
                type: array
          description: An array with a team's available WorkflowTemplates.
        "401":
          content:
            application/octet-stream:
              schema:
                type: string
            text/plain:
              schema:
                type: string
          description: Unauthorized
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Retrieve workflow templates
      tags:
      - Workflows
      x-accepts: application/json
  /v2/jobs:
    get:
      description: |-
        Get all Jobs within a given offset and limit. You can retrieve jobs from your account using the above API.

        Example CURL command:

        ```bash
        curl -X GET 'https://api.lilt.com/v2/jobs?key=API_KEY&isArchived=false'
        ```
      operationId: retrieveAllJobs
      parameters:
      - description: Retrieves all jobs that are archived.
        explode: true
        in: query
        name: isArchived
        required: false
        schema:
          type: boolean
        style: form
      - description: Retrieves all jobs that are delivered.
        explode: true
        in: query
        name: isDelivered
        required: false
        schema:
          type: boolean
        style: form
      - description: Return jobs starting at the offset row. If not given the default
          offset will be 0.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: The maximum number of jobs to be returned. If not given the default
          limit will be 25.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          maximum: 50
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Job'
                title: JobsResponse
                type: array
          description: A list of Job objects.
        "401":
          content:
            application/octet-stream:
              schema:
                type: string
            text/plain:
              schema:
                type: string
          description: Unauthorized
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Retrieve all Jobs
      tags:
      - Jobs
      x-accepts: application/json
    post:
      description: |+
        Create a Job. A Job is a collection of Projects.
        A Job will contain multiple projects, based on the language pair.
        A Project is associated with exactly one Memory.

        Jobs appear in the Jobs dashboard of the web app.

        Example CURL command:

        ```bash
        curl -X POST 'https://api.lilt.com/v2/jobs?key=API_KEY' \
        --header 'Content-Type: application/json' \
        --data-raw '{
          "name": "test job",
          "fileIds": [5009, 5010, 5011],
          "due": "2022-05-05T10:56:44.985Z",
          "srcLang": "en",
          "srcLocale": "US",
          "languagePairs": [
              { "memoryId": 3121, "trgLang": "de" },
              { "memoryId": 2508, "trgLang": "fr" },
              { "memoryId": 3037, "trgLang": "zh" }
            ]
        }'
        ```

      operationId: createJob
      requestBody:
        $ref: '#/components/requestBodies/JobCreateParameters'
        content:
          application/json:
            schema:
              example:
                languagePairs:
                - workflowStageAssignments:
                  - workflowStageTemplateId: 12345
                    userId: 123
                    email: username@domain.com
                  - workflowStageTemplateId: 12345
                    userId: 123
                    email: username@domain.com
                  pretranslate: true
                  trgLocale: DE
                  caseSensitive: true
                  dueDate: 2021-10-03T13:43:00.000Z
                  workflowTemplateName: 0
                  takeMatchAttribution: true
                  externalModelId: 44
                  workflowTemplateId: 14
                  autoAccept: true
                  configId: 2332
                  memoryId: 1241
                  trgLang: de
                - workflowStageAssignments:
                  - workflowStageTemplateId: 12345
                    userId: 123
                    email: username@domain.com
                  - workflowStageTemplateId: 12345
                    userId: 123
                    email: username@domain.com
                  pretranslate: true
                  trgLocale: DE
                  caseSensitive: true
                  dueDate: 2021-10-03T13:43:00.000Z
                  workflowTemplateName: 0
                  takeMatchAttribution: true
                  externalModelId: 44
                  workflowTemplateId: 14
                  autoAccept: true
                  configId: 2332
                  memoryId: 1241
                  trgLang: de
                workflowTemplateId: 6
                fileIds:
                - 298
                - 299
                due: 2021-10-05T14:48:00.000Z
                name: My new Job
                srcLocale: US
                isPlural: true
                srcLang: en
              properties:
                name:
                  description: A name for the Job.
                  example: My new Job
                  type: string
                languagePairs:
                  description: Language pairs is a set of one or more pairs that includes
                    source language, source locale(optional), target language, target
                    locale(optional), and memoryId.
                  items:
                    $ref: '#/components/schemas/LanguagePair'
                  type: array
                fileIds:
                  description: A list of file ids to upload to job creation.
                  example:
                  - 298
                  - 299
                  items:
                    type: integer
                  type: array
                due:
                  description: An ISO string date representing job due date.
                  example: 2021-10-05T14:48:00.000Z
                  type: string
                srcLang:
                  description: 2-letter ISO source language code
                  example: en
                  type: string
                srcLocale:
                  description: 2-letter source language code
                  example: US
                  type: string
                isPlural:
                  description: A boolean value representing if the files have plurals.
                  example: true
                  type: boolean
                workflowTemplateId:
                  description: ID of the workflow template to be used. Use the [workflows
                    templates endpoint](#tag/Workflows/operation/getWorkflowTemplates)
                    to get the list of available workflows.
                  type: integer
              required:
              - fileIds
              - languagePairs
              - name
              - srcLang
              - srcLocale
              title: JobCreateParameters
              type: object
        description: The Job resource to create.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
          description: A Job object.
        "401":
          content:
            application/octet-stream:
              schema:
                type: string
            text/plain:
              schema:
                type: string
          description: Unauthorized
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Create a Job
      tags:
      - Jobs
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /v2/jobs/{jobId}:
    delete:
      description: |-
        Delete a job, deletes all projects and documents in the job, deletes all the segments from all the job's translation memories.

        Example CURL command:

        ```bash
        curl -X DELETE 'https://api.lilt.com/v2/jobs/{id}?key=API_KEY'
        ```
      operationId: deleteJob
      parameters:
      - description: A job id.
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobDeleteResponse'
          description: A status object.
        "401":
          content:
            application/octet-stream:
              schema:
                type: string
            text/plain:
              schema:
                type: string
          description: Unauthorized
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Delete a Job
      tags:
      - Jobs
      x-accepts: application/json
    get:
      description: |-
        Retrieves a job data along with stats. To retrieve a specific job, you will need the job `id` in the url path.

        Example CURL command:

        ```bash
        curl -X GET 'https://api.lilt.com/v2/jobs/{id}?key=API_KEY'
        ```
      operationId: getJob
      parameters:
      - description: A job id.
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
          description: A job object.
        "401":
          content:
            application/octet-stream:
              schema:
                type: string
            text/plain:
              schema:
                type: string
          description: Unauthorized
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Retrieve a Job
      tags:
      - Jobs
      x-accepts: application/json
    put:
      description: |-
        Updates a job with the new job properties. To update a specific job, you will need the job `id` in the url path.

        You can update job's name and due date by passing the property and new value in the body.

        Example CURL command:

        ```bash
        curl -X PUT 'https://api.lilt.com/v2/jobs/{id}?key=API_KEY' \
        --header 'Content-Type: application/json' \
        --data-raw '{
          "name": "test job",
          "due": "2022-05-05T10:56:44.985Z"
        }'
        ```
      operationId: updateJob
      parameters:
      - description: A job id.
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/JobUpdateParameters'
        content:
          application/json:
            schema:
              example:
                dueDate: 0
                name: My new Job
                isProcessing: ExportError
                processingErrorMsg: Authentication failed. Check your Contentful API
                  Key.
              properties:
                name:
                  description: A name for the Job.
                  example: My new Job
                  type: string
                dueDate:
                  description: An ISO string date.
                  type: integer
                isProcessing:
                  description: |
                    The processing status of the job. Provide one of the following
                    integers to indicate the status.

                    Ok = 0
                    Started = 1
                    ExportError = -2
                  enum:
                  - "0"
                  - "1"
                  - -2
                  example: ExportError
                  type: string
                processingErrorMsg:
                  description: The processing error message.
                  example: Authentication failed. Check your Contentful API Key.
                  type: string
              title: JobUpdateParameters
              type: object
        description: The Job resource to update.
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
          description: A job object.
        "401":
          content:
            application/octet-stream:
              schema:
                type: string
            text/plain:
              schema:
                type: string
          description: Unauthorized
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Update a Job
      tags:
      - Jobs
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /v2/jobs/{jobId}/stats:
    post:
      description: |-
        Get the TM leverage stats for the job (new/exact/fuzzy matches).

        Example CURL command:

        ```bash
        curl -X POST 'https://api.lilt.com/v2/jobs/{id}/stats?key=API_KEY'
        ```
      operationId: getJobLeverageStats
      parameters:
      - description: A job id.
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobLeverageStats'
          description: A job leverage stats object.
        "401":
          content:
            application/octet-stream:
              schema:
                type: string
            text/plain:
              schema:
                type: string
          description: Unauthorized
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Retrieve Job Leverage Stats
      tags:
      - Jobs
      x-accepts: application/json
  /v2/jobs/{jobId}/archive:
    post:
      description: |-
        Set job to archived, unassign all linguists and archive all projects and documents inside the job.

        It will return the archived job.

        Example CURL command:

        ```bash
        curl -X POST 'https://api.lilt.com/v2/jobs/{id}/archive?key=API_KEY'
        ```
      operationId: archiveJob
      parameters:
      - description: A job id.
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
          description: A job object.
        "401":
          content:
            application/octet-stream:
              schema:
                type: string
            text/plain:
              schema:
                type: string
          description: Unauthorized
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Archive a Job
      tags:
      - Jobs
      x-accepts: application/json
  /v2/jobs/{jobId}/unarchive:
    post:
      description: |-
        Set job to unarchived, the job will move to active status.

        Example CURL command:

        ```bash
        curl -X POST 'https://api.lilt.com/v2/jobs/{id}/unarchive?key=API_KEY'
        ```
      operationId: unarchiveJob
      parameters:
      - description: A job id.
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
          description: A job object.
        "401":
          content:
            application/octet-stream:
              schema:
                type: string
            text/plain:
              schema:
                type: string
          description: Unauthorized
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Unarchive a Job
      tags:
      - Jobs
      x-accepts: application/json
  /v2/jobs/{jobId}/deliver:
    post:
      description: |-
        Set the job state to delivered and set all the projects in the job to done

        It will return the delivered job.

        Example CURL command:

        ```bash
        curl -X POST 'https://api.lilt.com/v2/jobs/{id}/deliver?key=API_KEY'
        ```
      operationId: deliverJob
      parameters:
      - description: A job id.
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
          description: A job object.
        "401":
          content:
            application/octet-stream:
              schema:
                type: string
            text/plain:
              schema:
                type: string
          description: Unauthorized
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Deliver a Job
      tags:
      - Jobs
      x-accepts: application/json
  /v2/jobs/{jobId}/reactivate:
    post:
      description: |-
        Set the job state to active. Does not change the state of projects associated with the given job.

        It will return the reactivated job.

        Example CURL command:

        ```bash
        curl -X POST 'https://api.lilt.com/v2/jobs/{id}/reactivate?key=API_KEY'
        ```
      operationId: reactivateJob
      parameters:
      - description: A job id.
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
          description: A job object.
        "401":
          content:
            application/octet-stream:
              schema:
                type: string
            text/plain:
              schema:
                type: string
          description: Unauthorized
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Reactivate a Job
      tags:
      - Jobs
      x-accepts: application/json
  /v2/jobs/{jobId}/export:
    get:
      description: |-
        Prepare job files for download.
        To export translated documents from the job use the query parameter `type=files`:

        Example CURL command:

        ```bash
        curl -X GET 'https://api.lilt.com/v2/jobs/{id}/export?key=API_KEY&type=files'
        ```

        To export job memories use the query parameter `type=memory`.

        The status of the export can be checked by requesting the job `GET /jobs/:jobId`, `job.isProcessing` will be `1` while in progress,
        `0` when idle and `-2` when the export failed.
      operationId: exportJob
      parameters:
      - description: A job id.
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: integer
        style: simple
      - description: category for files and memory.
        explode: true
        in: query
        name: type
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content: {}
          description: 200 status.
        "401":
          content:
            application/octet-stream:
              schema:
                type: string
            text/plain:
              schema:
                type: string
          description: Unauthorized
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Export a Job
      tags:
      - Jobs
      x-accepts: application/json
  /v2/jobs/{jobId}/download:
    get:
      description: |-
        Make sure you have exported a job with the same id before using this api.

        Downloading files requires the exported job `id` in the param.

        Example CURL command:

        ```bash
        curl -X GET 'https://api.lilt.com/v2/jobs/{id}/download?key=API_KEY'
        ```
      operationId: downloadJob
      parameters:
      - description: A job id.
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: byte
                type: string
          description: zipped file
        "401":
          content:
            application/octet-stream:
              schema:
                type: string
            text/plain:
              schema:
                type: string
          description: Unauthorized
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Download a Job
      tags:
      - Jobs
      x-accepts: application/json
  /v2/projects:
    delete:
      description: |
        Delete a Project.
      operationId: deleteProject
      parameters:
      - description: A unique Project identifier.
        explode: true
        in: query
        name: id
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDeleteResponse'
          description: A status object.
        "401":
          content:
            application/octet-stream:
              schema:
                type: string
            text/plain:
              schema:
                type: string
          description: Unauthorized
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Delete a Project
      tags:
      - Projects
      x-accepts: application/json
    get:
      description: |-
        Retrieves one or more projects, including the documents associated with each project. Retrieving a project is the most efficient way to retrieve a single project, multiple projects or a list of all available projects.

        To retrieve a specific project, specify the `id` request parameter or you can retrieve multiple projects by adding comma (,) between ids eg. `?id=1234,5678`. To retrieve all projects, omit the `id` request parameter. To limit the retrieved projects to those with a particular source language or target language, specify the corresponding ISO 639-1 language codes in the `srclang` and `trglang` request parameters, respectively.
      operationId: getProjects
      parameters:
      - description: A unique Project identifier. It can be a single id or multiple
          ids separated by a comma
        explode: true
        in: query
        name: id
        required: false
        schema:
          type: integer
        style: form
      - description: An ISO 639-1 language code.
        explode: true
        in: query
        name: srclang
        required: false
        schema:
          type: string
        style: form
      - description: An ISO 639-1 language code.
        explode: true
        in: query
        name: trglang
        required: false
        schema:
          type: string
        style: form
      - description: Unix time stamp (epoch, in seconds) of Projects with `created_at`
          greater than or equal to the value.
        explode: true
        in: query
        name: from_time
        required: false
        schema:
          type: integer
        style: form
      - description: Unix time stamp (epoch, in seconds) of Projects with `created_at`
          less than the value.
        explode: true
        in: query
        name: to_time
        required: false
        schema:
          type: integer
        style: form
      - description: A project state (backlog, inProgress, inReview, inQA, done).
        explode: true
        in: query
        name: state
        required: false
        schema:
          type: string
        style: form
      - description: A flag that toggles whether to include archived projects in the
          response (the default is `true`).
        explode: true
        in: query
        name: archived
        required: false
        schema:
          type: boolean
        style: form
      - description: A unique Connector identifier.
        explode: true
        in: query
        name: connector_id
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Project'
                title: ProjectResponse
                type: array
          description: A list of Project objects.
        "401":
          content:
            application/octet-stream:
              schema:
                type: string
            text/plain:
              schema:
                type: string
          description: Unauthorized
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Retrieve a Project
      tags:
      - Projects
      x-accepts: application/json
    post:
      description: |+
        Create a Project. A Project is a collection of Documents.

        A Project is associated with exactly one Memory.

        Projects appear in the dashboard of the web app.

      operationId: createProject
      requestBody:
        $ref: '#/components/requestBodies/ProjectCreateParameters'
        content:
          application/json:
            schema:
              example:
                metadata:
                  connectorType: github
                  notes: example metadata
                memory_id: 1234
                workflowTemplateId: 14
                job_id: 1234
                name: My new project
                due_date: 1489147692
              properties:
                name:
                  description: A name for the Project.
                  example: My new project
                  type: string
                memory_id:
                  description: The Memory to associate with this new Project.
                  example: 1234
                  type: integer
                job_id:
                  description: |
                    The Job to associate with this new Project. If a Job ID is not
                    provided then a new Job will be created to contain the
                    Project.
                  example: 1234
                  type: integer
                due_date:
                  description: The due date. Measured in seconds since the Unix epoch.
                  example: 1489147692
                  type: integer
                metadata:
                  description: A JSON object of key/value string pairs. Stores custom
                    project information.
                  example:
                    connectorType: github
                    notes: example metadata
                  properties: {}
                  type: object
                workflowTemplateId:
                  description: The workflow template used to create this project.
                    WorkflowTemplateIds can be retrieved via the /workflows/templates
                    endpoint. If not specified then the organization default workflowTemplateId
                    will be used.
                  example: 14
                  type: integer
              required:
              - memory_id
              - name
              title: ProjectCreateParameters
              type: object
        description: The Project resource to create.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: A Project object.
        "401":
          content:
            application/octet-stream:
              schema:
                type: string
            text/plain:
              schema:
                type: string
          description: Unauthorized
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Create a Project
      tags:
      - Projects
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /v2/documents/files:
    get:
      description: |+
        Export a Document that has been translated in the Lilt web application.
        Any Document can be downloaded in XLIFF 1.2 format, or can be retrieved in its original uploaded format by setting `is_xliff=false`.
        This endpoint will fail if either (a) export or (b) pre-translation operations are in-progress. The status of those operations can be determined by retrieving the Document resource.
        Example CURL command:
        ```bash
          curl -X GET https://api.lilt.com/v2/documents/files?key=API_KEY&id=274 -o from_lilt.xliff
        ```

      operationId: downloadDocument
      parameters:
      - description: An unique Document identifier.
        explode: true
        in: query
        name: id
        required: true
        schema:
          type: integer
        style: form
      - description: Download the document in XLIFF 1.2 format.
        explode: true
        in: query
        name: is_xliff
        required: false
        schema:
          default: true
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: byte
                title: DocumentDownloadResponse
                type: string
          description: A file.
        "401":
          content:
            application/octet-stream:
              schema:
                type: string
            text/plain:
              schema:
                type: string
          description: Unauthorized
        "502":
          content: {}
          description: File in pretranslation.
        default:
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Download a Document
      tags:
      - Documents
      x-accepts: application/octet-stream,text/plain
    post:
      description: |+
        Create a Document from a file in any of the formats [documented in our knowledge base](https://support.lilt.com/hc/en-us/articles/360020816253-File-Formats).
        Request parameters should be passed as JSON object with the header field `LILT-API`.

        File names in the header can only contain [US-ASCII characters](https://en.wikipedia.org/wiki/ASCII). File names with characters outside of US-ASCII should be [URI encoded](https://en.wikipedia.org/wiki/Percent-encoding) or transliterated to US-ASCII strings.

        Example CURL command:
        ```bash
          curl -X POST https://api.lilt.com/v2/documents/files?key=API_KEY \
          --header "LILT-API: {\"name\": \"introduction.xliff\",\"pretranslate\": \"tm+mt\",\"project_id\": 9}" \
          --header "Content-Type: application/octet-stream" \
          --data-binary @Introduction.xliff
        ```

      operationId: uploadDocument
      parameters:
      - description: A file name.
        explode: false
        in: header
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: A unique Project identifier.
        explode: false
        in: header
        name: project_id
        required: true
        schema:
          type: integer
        style: simple
      - description: |
          An optional parameter indicating if and how the document will be
          pretranslated upon being uploaded.
          The accepted values are `TM`, or `TM+MT`
        explode: false
        in: header
        name: pretranslate
        required: false
        schema:
          type: string
        style: simple
      - description: |
          An optional parameter to auto-accept segments with 100% translation
          memory matches when the `pretranslate` option is also set, or to
          auto-accept any target data that is present when the uploaded file
          is XLIFF. If omitted it will default to your organization settings for `Accept and lock exact matches`,
          if set to `false`, no segments will be auto-accepted.
        explode: false
        in: header
        name: auto_accept
        required: false
        schema:
          type: boolean
        style: simple
      - description: |
          An optional parameter to use case sensitive translation memory matching when the `pretranslate`
          option is also enabled. Matches must have identical character-by-character case to qualify as matches.
          Default value matches your organization settings for `Use case sensitive translation memory matching` setting
        explode: false
        in: header
        name: case_sensitive
        required: false
        schema:
          type: boolean
        style: simple
      - description: |
          An optional parameter to attribute translation authorship of exact matches to the author of the file
          when the `pretranslate` option is also enabled. Default value matches your organization settings for `Translation authorship` setting
        explode: false
        in: header
        name: match_attribution
        required: false
        schema:
          type: boolean
        style: simple
      - description: |
          An optional pararameter to specify an import configuration to
          be applied when extracting translatable content from this file.
        explode: false
        in: header
        name: config_id
        required: false
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/octet-stream:
            schema:
              format: binary
              title: DocumentUploadBody
              type: string
        description: |
          The file contents to be uploaded. The entire POST body will be
          treated as the file.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentWithSegments'
          description: A Document object.
        "401":
          content:
            application/octet-stream:
              schema:
                type: string
            text/plain:
              schema:
                type: string
          description: Unauthorized
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Upload a File
      tags:
      - Documents
      x-codegen-request-body-name: body
      x-contentType: application/octet-stream
      x-accepts: application/json
  /v2/files:
    delete:
      description: "Delete a File.\n\nExample CURL command:\n```bash\n  curl -X DELETE\
        \ https://api.lilt.com/v2/files?key=API_KEY&id=123 \n```\n\n"
      operationId: deleteFile
      parameters:
      - description: A unique File identifier.
        explode: true
        in: query
        name: id
        required: true
        schema:
          type: integer
        style: form
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileDeleteResponse'
          description: A status object.
        "401":
          content:
            application/octet-stream:
              schema:
                type: string
            text/plain:
              schema:
                type: string
          description: Unauthorized
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Delete a File
      tags:
      - Files
      x-accepts: application/json
    get:
      description: |-
        Retrieves one or more files available to your user. Files are not associated with a project or a memory. They are unprocessed and can be used later in the project/document creation workflow step.

        To retrieve a specific file, specify the <strong>id</strong> request parameter. To retrieve all files, omit the <strong>id</strong> request parameter.

        Example CURL command:
        ```bash
         curl -X GET https://api.lilt.com/v2/files?key=API_KEY&id=274
        ```
      operationId: getFiles
      parameters:
      - description: A unique File identifier.
        explode: true
        in: query
        name: id
        required: false
        schema:
          type: integer
        style: form
      - description: |
          One or more labels. This will return the files which contain all of
          the given labels.
        explode: false
        in: query
        name: labels
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SourceFile'
                title: FilesList
                type: array
          description: A list of files.
        "401":
          content:
            application/octet-stream:
              schema:
                type: string
            text/plain:
              schema:
                type: string
          description: Unauthorized
        "403":
          content: {}
          description: User does not have permission for provided file.
        "410":
          content: {}
          description: File deleted.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error.
      summary: Retrieve a File
      tags:
      - Files
      x-accepts: application/json
    post:
      description: |+
        Upload a File in any of the formats [documented in our knowledge
        base](https://support.lilt.com/hc/en-us/articles/360020816253-File-Formats).
        Request parameters should be passed in as query string parameters.

        Example CURL command:
        ```bash
          curl -X POST https://api.lilt.com/v2/files?key=API_KEY&name=en_US.json \
          --header "Content-Type: application/octet-stream" \
          --data-binary @en_US.json
        ```
        Calls to GET /files are used to monitor the language detection results. The API response will be augmented to include detected language and confidence score.

        The language detection will complete asynchronously. Prior to completion, the `detected_lang` value will be `zxx`, the reserved ISO 639-2 code for "No linguistic content/not applicable".

        If the language can not be determined, or the detection process fails, the `detected_lang` field will return `und`, the reserved ISO 639-2 code for undetermined language, and the `detected_lang_confidence` score will be `0`.

      operationId: uploadFile
      parameters:
      - description: A file name.
        explode: true
        in: query
        name: name
        required: true
        schema:
          type: string
        style: form
      - description: A hash value to associate with the file. The MD5 hash of the
          body contents will be used by default if a value isn't provided.
        explode: true
        in: query
        name: file_hash
        required: false
        schema:
          type: string
        style: form
      - description: Flag indicating whether to perform language detection on the
          uploaded file. Default is false.
        explode: true
        in: query
        name: langId
        required: false
        schema:
          type: boolean
        style: form
      - description: The project to associate the uploaded file with.
        explode: true
        in: query
        name: project_id
        required: false
        schema:
          type: integer
        style: form
      - description: The category of the file. The options are `REFERENCE`, or `API`.
          The default is API. Files with the `REFERENCE` category will be displayed
          as reference material.
        explode: true
        in: query
        name: category
        required: false
        schema:
          type: string
        style: form
      - description: Comma-separated list of labels to add to the uploaded document.
        explode: true
        in: query
        name: labels
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/octet-stream:
            schema:
              format: binary
              title: FileUploadBody
              type: string
        description: The file contents to be uploaded. The entire POST body will be
          treated as the file.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceFile'
          description: A SourceFile object.
        "401":
          content:
            application/octet-stream:
              schema:
                type: string
            text/plain:
              schema:
                type: string
          description: Unauthorized
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Upload a File
      tags:
      - Files
      x-codegen-request-body-name: body
      x-contentType: application/octet-stream
      x-accepts: application/json
  /v2/files/download:
    get:
      description: |
        Download a File.

        Example CURL:
        ```bash
        curl -X GET 'https://api.lilt.com/v2/files/download?key=API_KEY&id=1'
        ```
      operationId: download
      parameters:
      - description: A File id.
        explode: true
        in: query
        name: id
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: byte
                title: DocumentDownloadResponse
                type: string
          description: A file.
        "401":
          content:
            application/octet-stream:
              schema:
                type: string
            text/plain:
              schema:
                type: string
          description: Unauthorized
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Download file
      tags:
      - Files
      x-accepts: application/json
  /v2/files/labels:
    delete:
      description: |
        Remove a label from a File.

        Example CURL:
        ```bash
        curl -X DELETE 'https://api.lilt.com/v2/files/labels?key=API_KEY&id=1&name=label_name'
        ```
      operationId: removeLabel
      parameters:
      - description: A File id.
        explode: true
        in: query
        name: id
        required: true
        schema:
          type: string
        style: form
      - description: A label name.
        explode: true
        in: query
        name: name
        required: true
        schema:
          type: string
        style: form
      responses:
        "204":
          content: {}
          description: A success response.
        "401":
          content:
            application/octet-stream:
              schema:
                type: string
            text/plain:
              schema:
                type: string
          description: Unauthorized
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Remove Label from File
      tags:
      - Files
      x-accepts: application/json
    post:
      description: |
        Add a label to a File.

        Example CURL:
        ```bash
        curl -X POST 'https://api.lilt.com/v2/files/labels?key=API_KEY&id=1'
        --header 'Content-Type: application/json' \
        --data-raw '{
            "name": "label_name"
        }'
        ```
      operationId: addLabel
      parameters:
      - description: A File id.
        explode: true
        in: query
        name: id
        required: true
        schema:
          type: string
        style: form
      requestBody:
        $ref: '#/components/requestBodies/AddFileLabelRequest'
        content:
          application/json:
            schema:
              example:
                name: label_name
              properties:
                name:
                  description: The Label name.
                  example: label_name
                  type: string
              title: AddFileLabelRequest
              type: object
        description: A label name.
        required: true
      responses:
        "204":
          content: {}
          description: A success response.
        "401":
          content:
            application/octet-stream:
              schema:
                type: string
            text/plain:
              schema:
                type: string
          description: Unauthorized
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Add Label to File
      tags:
      - Files
      x-codegen-request-body-name: name
      x-contentType: application/json
      x-accepts: application/json
  /v3/connectors/configuration/webhooks:
    get:
      description: |
        Retrieves a list of webhook configurations available to your LILT organization.
        Use this to manage your webhook configurations.
      operationId: webhooksGetMany
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/webhook_response'
                type: array
          description: The webhook configurations response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Retrieve a list of Webhook Configurations.
      tags:
      - Webhook Configuration
      x-accepts: application/json
    post:
      description: |
        Creates a new webhook configuration for your LILT organization.
      operationId: webhooksCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/create_webhook_options'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webhook_response'
          description: Returns the newly created webhook configuration.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Creates a new Webhook Configuration
      tags:
      - Webhook Configuration
      x-contentType: application/json
      x-accepts: application/json
  /v3/connectors/configuration/webhooks/{id}:
    delete:
      operationId: services.configuration_api.webhooks.delete
      parameters:
      - description: The Webhook Configuration ID.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          type: integer
        style: simple
      responses:
        "204":
          description: Upon success a response with an empty body is returned.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Delete a specific Webhook Configuration by ID.
      tags:
      - Webhook Configuration
      x-accepts: application/json
    get:
      description: |
        Retrieves a specific webhook configuration by its ID.
        Deleted webhook configurations are not returned.
      operationId: webhooksGet
      parameters:
      - description: The Webhook Configuration ID.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webhook_response'
          description: Returns the webhook configuration.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Retrieve a specific Webhook Configuration by ID.
      tags:
      - Webhook Configuration
      x-accepts: application/json
    put:
      description: |
        Updates a specific webhook configuration by its ID.
        Only the fields that are provided in the request body will be updated.
      operationId: webhooksUpdate
      parameters:
      - description: The Webhook Configuration ID.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object'
        content:
          application/json:
            schema:
              properties:
                webhookName:
                  description: The name of the webhook configuration.
                  type: string
                webhookUrl:
                  description: The URL to which the webhook notifications will be
                    sent.
                  format: uri
                  type: string
                eventType:
                  description: The list of event types that will trigger the webhook
                    notification.
                  items:
                    enum:
                    - JOB_DELIVER
                    - JOB_UPDATE
                    - PROJECT_DELIVER
                    - PROJECT_UPDATE
                    type: string
                  type: array
              required:
              - eventType
              - webhookName
              - webhookUrl
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webhook_response'
          description: Returns the updated webhook configuration.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Update a specific Webhook Configuration by ID.
      tags:
      - Webhook Configuration
      x-contentType: application/json
      x-accepts: application/json
components:
  requestBodies:
    JobCreateParameters:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/JobCreateParameters'
      required: true
    JobUpdateParameters:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/JobUpdateParameters'
      required: false
    MemoryCreateParameters:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MemoryCreateParameters'
      required: true
    CreateConverterConfigParameters:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateConverterConfigParameters'
      required: true
    ProjectCreateParameters:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProjectCreateParameters'
      required: true
    MemoryUpdateParameters:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MemoryUpdateParameters'
      required: true
    inline_object:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object'
      required: true
    TranslateSegmentBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TranslateSegmentBody'
      required: false
    AddFileLabelRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AddFileLabelRequest'
      required: true
  responses:
    UnauthorizedError:
      content:
        application/octet-stream:
          schema:
            type: string
        text/plain:
          schema:
            type: string
      description: Unauthorized
  schemas:
    Error:
      description: |
        Response in the event of an unexpected error.
      example:
        message: Internal server error.
      properties:
        message:
          description: A human-readable message describing the error.
          type: string
      type: object
    Memory:
      description: |
        A Memory is a collection of parallel (source/target) segments
        from which a MT/TM model is trained. When a translator confirms
        a segment in the Interface, a parallel segment is added to the
        Memory. Parallel segments from existing translation memories and
        bitexts can also be added to the Memory via the REST API.
      example:
        trglocale: FR
        updated_at: 1489147692
        srclang: en
        name: Acme Corp Support Content
        created_at: 1489147692
        resources:
        - resources
        - resources
        id: 1234
        is_processing: false
        srclocale: US
        version: 78
        trglang: fr
      properties:
        id:
          description: A unique number identifying the Memory.
          example: 1234
          type: integer
        srclang:
          description: An ISO 639-1 language identifier.
          example: en
          type: string
        trglang:
          description: An ISO 639-1 language identifier.
          example: fr
          type: string
        srclocale:
          description: An ISO 639-1 language identifier.
          example: US
          type: string
        trglocale:
          description: An ISO 639-1 language identifier.
          example: FR
          type: string
        name:
          description: A name for the Memory.
          example: Acme Corp Support Content
          type: string
        is_processing:
          description: Indicates the memory is being processed.
          example: false
          type: boolean
        version:
          description: The current version of the Memory, which is the number of updates
            since the memory was created.
          example: 78
          type: integer
        created_at:
          description: Time at which the object was created. Measured in seconds since
            the Unix epoch.
          example: 1489147692
          type: integer
        updated_at:
          description: Time at which the object was created. Measured in seconds since
            the Unix epoch.
          example: 1489147692
          type: integer
        resources:
          description: The resource files (translation memories and termbases) associated
            with this Memory.
          items:
            type: string
          type: array
      type: object
    TranslationMemoryEntry:
      description: A translation memory entry.
      example:
        score: 100
        metadata: '{}'
        source: The red bus.
        target: Le bus rouge.
      properties:
        source:
          description: The source string.
          example: The red bus.
          type: string
        target:
          description: The target string. Tags will be automatically placed according
            to the query string.
          example: Le bus rouge.
          type: string
        score:
          description: The fuzzy match score.
          example: 100
          type: integer
        metadata:
          description: Attributes describing the translation memory entry.
          properties: {}
          type: object
      type: object
    SDLXLIFFFilter:
      properties:
        confName:
          description: the current state of the SDLXLIFF Trans Unit.
          enum:
          - Translated
          - Draft
          - ApprovedTranslation
          - Locked
          - SignedOff
          type: string
        allowablePercentage:
          description: This represents for the current conf_name what percentage the
            filter applies to.  If you pass -1 it will take any value for this field
            and won't ignore blank values. If you pass 50, Lilt will only import Segments
            that have a 50 percent match or better.
          type: integer
        allowUnlockedSegments:
          description: Boolean that tells Lilt whether we should allow unlocked Segments
            for this conf_name.
          type: boolean
      required:
      - confName
      type: object
    Translation:
      description: A machine translation (MT) or a translation memory (TM) match of
        a source segment.
      example:
      - score: 3.4936864E-8
        align: 0-0 1-1 2-2 3-3
        targetDelimiters:
        - ""
        - ' '
        - ' '
        - ""
        - ""
        targetWords:
        - Authentifizierung
        - nicht
        - erforderlich
        - "."
        target: Authentifizierung nicht erforderlich .
        targetWithTags: Authentifizierung nicht erforderlich.
        isTMMatch: false
        provenance: 0 0 0 0
      properties:
        target:
          description: The target string.
          type: string
        targetWithTags:
          description: The target string with source tags projected into the target.
          type: string
        align:
          description: |
            "MT only: A whitespace delimited list of source-target alignment indices."
          type: string
        provenance:
          description: |
            Positive values indicate that the word is from the Memory,
            with contiguous identical entries (e.g., 2 2) indicating
            phrase matches. Negative contiguous values indicate entries from the Lexicon.
            0 indicates a word from the background data.
          type: string
        score:
          description: The score of the translation.
          type: number
        isTMMatch:
          description: 'TM only: If true, indicates an exact translation memory match.'
          type: boolean
        targetDelimiters:
          description: A format string that indicates, for each word, if the word
            should be preceded by a space.
          items:
            type: string
          type: array
        targetWords:
          description: |
            The target string can be constructed by suffixing each `targetDelimiters` entry with its corresponding word in `targetWords` and concatenating the constructed array.
            Please note that the `targetDelimiters` array has one more entry than `targetWords` array which is why the last entry in the array will be the last value of `targetDelimiters`.
          items:
            type: string
          type: array
      type: object
    TranslationList:
      description: An ranked list of translations and associated metadata.
      example:
        untokenizedSource: Authentication not required.
        tokenizedSource: Authentication not required .
        translation:
        - - score: 3.4936864E-8
            align: 0-0 1-1 2-2 3-3
            targetDelimiters:
            - ""
            - ' '
            - ' '
            - ""
            - ""
            targetWords:
            - Authentifizierung
            - nicht
            - erforderlich
            - "."
            target: Authentifizierung nicht erforderlich .
            targetWithTags: Authentifizierung nicht erforderlich.
            isTMMatch: false
            provenance: 0 0 0 0
        - - score: 3.4936864E-8
            align: 0-0 1-1 2-2 3-3
            targetDelimiters:
            - ""
            - ' '
            - ' '
            - ""
            - ""
            targetWords:
            - Authentifizierung
            - nicht
            - erforderlich
            - "."
            target: Authentifizierung nicht erforderlich .
            targetWithTags: Authentifizierung nicht erforderlich.
            isTMMatch: false
            provenance: 0 0 0 0
        sourceDelimiters:
        - ""
        - ' '
        - ' '
        - ""
        - ""
      properties:
        untokenizedSource:
          description: The untokenized source segment. Punctuation has not been separated
            from words.
          example: Authentication not required.
          type: string
        tokenizedSource:
          description: The tokenized source segment. Punctuation has been separated
            from words.
          example: Authentication not required .
          type: string
        sourceDelimiters:
          description: A format string that indicates, for each word, if the word
            should be preceded by a space.
          example:
          - ""
          - ' '
          - ' '
          - ""
          - ""
          items:
            type: string
          type: array
        translation:
          description: A list of Translation objects.
          items:
            $ref: '#/components/schemas/Translation'
          type: array
      type: object
    MonitorFileTranslationTypeError:
      description: |
        Monitor file translation can have different errors based on reasons explained in the examples.
      example:
        Unsupported_file_type:
          message: Customer gave us garbage.
        File_extraction_error:
          message: Customer gave us garbage.
        No_translatable_content:
          message: Customer gave us an empty file.
        Batch_MT_initiation_failure:
          message: Something is wrong with MT.
        Batch_MT_response_failure:
          message: Something is wrong with MT.
        File_reassembly_error:
          message: We couldn't put the translated file back together.(okapi error)
        Billing_error:
          message: We couldn't log the information about the MT to our billing system.
        Invalid_memory:
          message: Something is wrong with the memory.
        Storage_error:
          message: Error occurred interacting with file storage.
      type: object
    TranslationInfo:
      description: |
        Information describing a batch translation process.
      example:
        id: 1
        fileId: 2,
        status: InProgress
        createdAt: 1609357135
      properties:
        id:
          description: Unique identifier for this translation.
          type: integer
        fileId:
          description: id of the File that is being translated.
          type: integer
        status:
          description: Status of the translation - `InProgress`, `ReadyForDownload`,
            `Completed`, `Failed`.
          type: string
        createdAt:
          description: Time when this translation was started, in seconds since the
            Unix epoch.
          type: integer
        errorMsg:
          description: Error message, present when status is `Failed`.
          type: string
      type: object
    LiltCreateContent:
      description: |
        Content Parameters for LiltCreate.
      example:
        template: template
        preferences:
          styleguide: styleguide
          tone: tone
        name: name
        templateParams:
          summary: summary
          contentLength: 6
          language: language
          memoryId: 1
          sections:
          - sections
          - sections
        language: language
        id: 0
      properties:
        name:
          description: A name for the request content.
          type: string
        id:
          description: A unique identifier for the generated content.
          type: integer
        language:
          description: The language of the content.
          type: string
        template:
          description: The template of the content.
          type: string
        templateParams:
          $ref: '#/components/schemas/LiltCreateContent_templateParams'
        preferences:
          $ref: '#/components/schemas/LiltCreateContent_preferences'
      required:
      - language
      - template
      - templateParams
      type: object
    LiltCreateContentRequest:
      description: |
        Content Parameters for LiltCreate.
      example:
        template: template
        preferences:
          styleguide: styleguide
          tone: tone
        name: name
        templateParams:
          summary: summary
          contentLength: 6
          language: language
          memoryId: 1
          sections:
          - sections
          - sections
        language: language
      properties:
        name:
          description: A name for the request content.
          type: string
        language:
          description: The language of the content.
          type: string
        template:
          description: The template of the content.
          type: string
        templateParams:
          $ref: '#/components/schemas/LiltCreateContent_templateParams'
        preferences:
          $ref: '#/components/schemas/LiltCreateContent_preferences'
      required:
      - language
      - template
      - templateParams
      type: object
    WorkflowStageTemplate:
      description: A single stage within a Workflow Template.
      example:
        name: Translate
        assignmentType: TRANSLATE
      properties:
        name:
          description: The human readable name of a Workflow stage.
          example: Translate
          type: string
        assignmentType:
          description: An enum to represent all possible types of Workflow stage.
          enum:
          - READY_TO_START
          - TRANSLATE
          - REVIEW
          - SECONDARY_REVIEW
          - DONE
          example: TRANSLATE
          type: string
      type: object
    WorkflowTemplate:
      description: A workflow template which defines the workflow's possible steps
        (combination of Translation, Review and Customer Review).
      example:
        name: Translate > Review > Customer Review
        stages:
        - name: Translate
          assignmentType: TRANSLATE
        - name: Translate
          assignmentType: TRANSLATE
        id: 15
        TeamId: 100
      properties:
        id:
          description: Identifier of a teams Workflow template. Can be used during
            Job creation for specifying the workflow used for a job or language pair.
          example: 15
          type: number
        name:
          example: Translate > Review > Customer Review
          type: string
        TeamId:
          description: The name of a given Workflow template.
          example: 100
          type: number
        stages:
          description: The stages in this workflow template.
          items:
            $ref: '#/components/schemas/WorkflowStageTemplate'
          type: array
      type: object
    JobProject:
      description: |
        A job project contains project statistical data that belongs to a specific job.
      example:
        trgLocale: CA
        isArchived: false
        workflowStatus: READY_TO_START
        workflowName: Translate > Review > Analyst Review
        numSourceTokens: 2134
        createdAt: 2021-04-01T13:43:00.000Z
        isDeleted: false
        due: 2021-10-03T13:43:00.000Z
        name: My new project
        srcLocale: US
        id: 0
        state: inProgress
        memoryId: 2134
        trgLang: fr
        srcLang: en
        isComplete: false
        updatedAt: 2021-06-03T13:43:00.000Z
      properties:
        id:
          description: An id for the project.
          type: integer
        srcLang:
          description: Source language, an ISO 639-1 language identifier.
          example: en
          type: string
        srcLocale:
          description: A locale identifier, supported for source language.
          example: US
          type: string
        trgLang:
          description: Target language, an ISO 639-1 language identifier.
          example: fr
          type: string
        trgLocale:
          description: A locale identifier, supported for target language.
          example: CA
          type: string
        name:
          description: A name for the project.
          example: My new project
          type: string
        due:
          description: An ISO date.
          example: 2021-10-03T13:43:00.000Z
          type: string
        isComplete:
          description: A state that checks project was completed.
          example: false
          type: boolean
        isArchived:
          description: The archived state of the project.
          example: false
          type: boolean
        state:
          description: Current state of the project. Example, backlog, inProgress,
            inReview, done.
          example: inProgress
          type: string
        numSourceTokens:
          description: Total number of source tokens.
          example: 2134
          type: integer
        createdAt:
          description: Time at which the object was created.
          example: 2021-04-01T13:43:00.000Z
          type: string
        updatedAt:
          description: Time at which the object was updated.
          example: 2021-06-03T13:43:00.000Z
          type: string
        isDeleted:
          description: A state that checks project was deleted.
          example: false
          type: boolean
        memoryId:
          description: A unique number identifying the associated Memory.
          example: 2134
          type: integer
        workflowStatus:
          description: The status of the Workflow for the current project.
          enum:
          - READY_TO_START
          - IN_PROGRESS
          - DONE
          example: READY_TO_START
          type: string
        workflowName:
          description: Human readable name of the workflow associated with the current
            project.
          example: Translate > Review > Analyst Review
          type: string
      type: object
    JobStats:
      description: |
        A job stats shows an overview of job's statistical data including total number of exact words, fuzzy words, language pairs, projects, etc.
      example:
        percentReviewed: 0
        projects:
        - trgLocale: CA
          isArchived: false
          workflowStatus: READY_TO_START
          workflowName: Translate > Review > Analyst Review
          numSourceTokens: 2134
          createdAt: 2021-04-01T13:43:00.000Z
          isDeleted: false
          due: 2021-10-03T13:43:00.000Z
          name: My new project
          srcLocale: US
          id: 0
          state: inProgress
          memoryId: 2134
          trgLang: fr
          srcLang: en
          isComplete: false
          updatedAt: 2021-06-03T13:43:00.000Z
        - trgLocale: CA
          isArchived: false
          workflowStatus: READY_TO_START
          workflowName: Translate > Review > Analyst Review
          numSourceTokens: 2134
          createdAt: 2021-04-01T13:43:00.000Z
          isDeleted: false
          due: 2021-10-03T13:43:00.000Z
          name: My new project
          srcLocale: US
          id: 0
          state: inProgress
          memoryId: 2134
          trgLang: fr
          srcLang: en
          isComplete: false
          updatedAt: 2021-06-03T13:43:00.000Z
        uniqueLanguagePairs: 1
        workflowStatus: READY_TO_START
        numLanguagePairs: 0
        newWords: 0
        numProjects: 0
        numDeliveredProjects: 0
        uniqueLinguists: 1
        sourceWords: 0
        exactWords: 0
        percentTranslated: 0
        fuzzyWords: 0
      properties:
        exactWords:
          description: Total number of exact words.
          example: 0
          type: integer
        fuzzyWords:
          description: Total number of fuzzy words.
          example: 0
          type: integer
        newWords:
          description: Total number of fuzzy words.
          example: 0
          type: integer
        numDeliveredProjects:
          description: Total number of delivered projects.
          example: 0
          type: integer
        numLanguagePairs:
          description: Total number of delivered projects.
          example: 0
          type: integer
        numProjects:
          description: Total number of projects.
          example: 0
          type: integer
        percentReviewed:
          description: Overall percentage of documents reviewed.
          example: 0
          type: integer
        percentTranslated:
          description: Overall percentage of documents translated.
          example: 0
          type: integer
        projects:
          items:
            $ref: '#/components/schemas/JobProject'
          type: array
        sourceWords:
          description: Total number of source words.
          example: 0
          type: integer
        uniqueLanguagePairs:
          description: Number of unique language pairs.
          example: 1
          type: integer
        uniqueLinguists:
          description: Number of unique linguists.
          example: 1
          type: integer
        workflowStatus:
          description: The status of the Workflow for the current job.
          enum:
          - READY_TO_START
          - IN_PROGRESS
          - DONE
          example: READY_TO_START
          type: string
      type: object
    Job:
      description: |
        A Job is a collection of multiple Projects. Each project is specific to a language pair, and is associated with exactly one Memory for that language pair. The Memory association cannot be changed after the Project is created.
      example:
        due: 2021-06-03T13:43:00Z
        stats:
          percentReviewed: 0
          projects:
          - trgLocale: CA
            isArchived: false
            workflowStatus: READY_TO_START
            workflowName: Translate > Review > Analyst Review
            numSourceTokens: 2134
            createdAt: 2021-04-01T13:43:00.000Z
            isDeleted: false
            due: 2021-10-03T13:43:00.000Z
            name: My new project
            srcLocale: US
            id: 0
            state: inProgress
            memoryId: 2134
            trgLang: fr
            srcLang: en
            isComplete: false
            updatedAt: 2021-06-03T13:43:00.000Z
          - trgLocale: CA
            isArchived: false
            workflowStatus: READY_TO_START
            workflowName: Translate > Review > Analyst Review
            numSourceTokens: 2134
            createdAt: 2021-04-01T13:43:00.000Z
            isDeleted: false
            due: 2021-10-03T13:43:00.000Z
            name: My new project
            srcLocale: US
            id: 0
            state: inProgress
            memoryId: 2134
            trgLang: fr
            srcLang: en
            isComplete: false
            updatedAt: 2021-06-03T13:43:00.000Z
          uniqueLanguagePairs: 1
          workflowStatus: READY_TO_START
          numLanguagePairs: 0
          newWords: 0
          numProjects: 0
          numDeliveredProjects: 0
          uniqueLinguists: 1
          sourceWords: 0
          exactWords: 0
          percentTranslated: 0
          fuzzyWords: 0
        creationStatus: COMPLETE
        name: My New Job
        isProcessing: 0
        id: 241
        deliveredAt: 2021-06-03T13:43:00Z
        status: active
      properties:
        name:
          description: A name for the job.
          example: My New Job
          type: string
        creationStatus:
          description: Status of job creation process that includes PENDING, COMPLETE,
            and FAILED.
          example: COMPLETE
          type: string
        deliveredAt:
          example: 2021-06-03T13:43:00Z
          format: date-time
          type: string
        status:
          description: Current status of job that includes archived, delivered, and
            active.
          example: active
          type: string
        due:
          description: An ISO string date.
          example: 2021-06-03T13:43:00Z
          format: date-time
          type: string
        id:
          description: An id for the job.
          example: 241
          type: integer
        isProcessing:
          description: Values include `1` while in progress, `0` when idle and `-2`
            when processing failed.
          example: 0
          type: integer
        stats:
          $ref: '#/components/schemas/JobStats'
      type: object
    WorkflowStageAssignment:
      description: An assignment object that associates a user to a workflow stage
        template.
      example:
        workflowStageTemplateId: 12345
        userId: 123
        email: username@domain.com
      properties:
        workflowStageTemplateId:
          example: 12345
          type: integer
        userId:
          example: 123
          type: integer
        email:
          example: username@domain.com
          type: string
      required:
      - workflowStageTemplateId
      type: object
    LanguagePair:
      description: |
        A language pair couples the source and target language along with memory and pre-translations settings associated to a project.
      example:
        workflowStageAssignments:
        - workflowStageTemplateId: 12345
          userId: 123
          email: username@domain.com
        - workflowStageTemplateId: 12345
          userId: 123
          email: username@domain.com
        pretranslate: true
        trgLocale: DE
        caseSensitive: true
        dueDate: 2021-10-03T13:43:00.000Z
        workflowTemplateName: 0
        takeMatchAttribution: true
        externalModelId: 44
        workflowTemplateId: 14
        autoAccept: true
        configId: 2332
        memoryId: 1241
        trgLang: de
      properties:
        trgLang:
          description: Target language, an ISO 639-1 language identifier.
          example: de
          type: string
        trgLocale:
          description: A locale identifier, supported for target language.
          example: DE
          type: string
        dueDate:
          description: An ISO date.
          example: 2021-10-03T13:43:00.000Z
          type: string
        memoryId:
          description: A unique number identifying the associated Memory.
          example: 1241
          type: integer
        externalModelId:
          description: A unique identifier for working with a third party model in
            the Lilt Platform
          example: 44
          type: integer
        pretranslate:
          description: Attribute translation authorship of exact matches to the creator
            of the document being pretranslated.
          type: boolean
        autoAccept:
          description: Accept and lock exact matches.
          example: true
          type: boolean
        caseSensitive:
          description: Use case sensitive translation memory matching.
          type: boolean
        takeMatchAttribution:
          description: Use MT for unmatched segments.
          example: true
          type: boolean
        configId:
          description: Configuration id
          example: 2332
          type: integer
        workflowTemplateId:
          description: Workflow Template id, to assign a specific Workflow to the
            project created out of this Language Pair. WorkflowTemplateIds can be
            retrieved via the /workflows/templates endpoint. If not specified then
            the Job level workflowTemplateId will be used.
          example: 14
          type: integer
        workflowTemplateName:
          description: Workflow Template Name, when passed with TeamId it allows for
            an on the fly look up of the correct WorkflowTemplate to use. If workflowTemplateId
            is passed the workflowTemplateId supercedes other lookups.
          type: integer
        workflowStageAssignments:
          items:
            $ref: '#/components/schemas/WorkflowStageAssignment'
          type: array
      required:
      - memoryId
      - trgLang
      type: object
    ProjectStats:
      example:
        exactWords: 800
        fuzzyWords: 150
        id: 1
        newWords: 50
        sourceWords: 1000
      properties:
        id:
          example: 1
          type: integer
        sourceWords:
          example: 1000
          type: integer
        exactWords:
          example: 800
          type: integer
        fuzzyWords:
          example: 150
          type: integer
        newWords:
          example: 50
          type: integer
      required:
      - exactWords
      - fuzzyWords
      - id
      - newWords
      - sourceWords
      type: object
    JobLeverageStats:
      description: |
        A job leverage stats object shows an overview of job's statistical data
        including total number of exact words, fuzzy words, and exact words for
        the job in total and for each project.
      example:
        exactWords: 0
        projects:
        - exactWords: 800
          fuzzyWords: 150
          id: 1
          newWords: 50
          sourceWords: 1000
        - exactWords: 800
          fuzzyWords: 150
          id: 1
          newWords: 50
          sourceWords: 1000
        fuzzyWords: 0
        newWords: 0
        sourceWords: 0
      properties:
        sourceWords:
          description: Total number of source words.
          example: 0
          type: integer
        exactWords:
          description: Total number of exact words.
          example: 0
          type: integer
        fuzzyWords:
          description: Total number of fuzzy words.
          example: 0
          type: integer
        newWords:
          description: Total number of new words.
          example: 0
          type: integer
        projects:
          items:
            $ref: '#/components/schemas/ProjectStats'
          type: array
      type: object
    DocumentWithoutSegments:
      description: |
        A Document is a collection of zero or more Segments.
      example:
        customer_reviewer_email: reviewer@example.com
        srclang: en
        created_at: 1489147692
        reviewer_email: reviewer@example.com
        export_succeeded: false
        trglang: de
        is_review_complete: true
        import_in_progress: false
        import_error_message: Could not parse XML.
        import_succeeded: false
        export_error_message: Could not parse XML.
        updated_at: 1489147692
        project_id: 287
        name: Introduction.xliff
        id: 46530
        export_in_progress: false
        is_pretranslating: false
        translator_email: translator@example.com
        status:
          pretranslation: idle
      properties:
        id:
          description: A unique number identifying the Document.
          example: 46530
          type: integer
        project_id:
          description: A unique number identifying the Project.
          example: 287
          type: integer
        srclang:
          description: An ISO 639-1 language identifier.
          example: en
          type: string
        trglang:
          description: An ISO 639-1 language identifier.
          example: de
          type: string
        name:
          description: The document name.
          example: Introduction.xliff
          type: string
        import_in_progress:
          description: True if the document is currently being imported
          example: false
          type: boolean
        import_succeeded:
          description: True if the import process succeeded.
          example: false
          type: boolean
        import_error_message:
          description: Error message if `import_succeeded=false`
          example: Could not parse XML.
          type: string
        export_in_progress:
          description: True if the document is currently being exported for download
          example: false
          type: boolean
        export_succeeded:
          description: True if the export process succeeded.
          example: false
          type: boolean
        export_error_message:
          description: Error message if `export_succeeded=false`
          example: Could not parse XML.
          type: string
        is_pretranslating:
          description: True if the document is currently being pretranslated.
          example: false
          type: boolean
        status:
          $ref: '#/components/schemas/DocumentWithoutSegments_status'
        translator_email:
          description: The email of the assigned translator.
          example: translator@example.com
          type: string
        reviewer_email:
          description: The email of the assigned reviewer.
          example: reviewer@example.com
          type: string
        customer_reviewer_email:
          description: The email of the assigned customer reviewer. Only present if
            the project was request by id.
          example: reviewer@example.com
          type: string
        created_at:
          description: Time at which the object was created. Measured in seconds since
            the Unix epoch.
          example: 1489147692
          type: integer
        updated_at:
          description: Time at which the object was created. Measured in seconds since
            the Unix epoch.
          example: 1489147692
          type: integer
        is_review_complete:
          description: Document review status.
          example: true
          type: boolean
      type: object
    Project:
      description: |
        A Project is a collection of zero or more Documents. It is specific to a language pair, and is associated with exactly one Memory for that language pair. The Memory association cannot be changed after the Project is created.
      example:
        metadata:
          connectorType: github
          notes: example metadata
        trglocale: FR
        workflowStatus: READY_TO_START
        document:
        - customer_reviewer_email: reviewer@example.com
          srclang: en
          created_at: 1489147692
          reviewer_email: reviewer@example.com
          export_succeeded: false
          trglang: de
          is_review_complete: true
          import_in_progress: false
          import_error_message: Could not parse XML.
          import_succeeded: false
          export_error_message: Could not parse XML.
          updated_at: 1489147692
          project_id: 287
          name: Introduction.xliff
          id: 46530
          export_in_progress: false
          is_pretranslating: false
          translator_email: translator@example.com
          status:
            pretranslation: idle
        - customer_reviewer_email: reviewer@example.com
          srclang: en
          created_at: 1489147692
          reviewer_email: reviewer@example.com
          export_succeeded: false
          trglang: de
          is_review_complete: true
          import_in_progress: false
          import_error_message: Could not parse XML.
          import_succeeded: false
          export_error_message: Could not parse XML.
          updated_at: 1489147692
          project_id: 287
          name: Introduction.xliff
          id: 46530
          export_in_progress: false
          is_pretranslating: false
          translator_email: translator@example.com
          status:
            pretranslation: idle
        srclang: en
        due_date: 1489147692
        created_at: 1489147692
        trglang: fr
        archived: false
        memory_id: 1234
        updated_at: 1489147692
        sample_review_percentage: 20
        job_id: 1234
        name: My New Project
        id: 448
        state: backlog
        srclocale: US
      properties:
        id:
          description: A unique number identifying the Project.
          example: 448
          type: integer
        memory_id:
          description: A unique number identifying the associated Memory.
          example: 1234
          type: integer
        job_id:
          description: A unique number identifying the associated Job.
          example: 1234
          type: integer
        srclang:
          description: An ISO 639-1 language identifier.
          example: en
          type: string
        trglang:
          description: An ISO 639-1 language identifier.
          example: fr
          type: string
        srclocale:
          description: A locale identifier, supported for srclang.
          example: US
          type: string
        trglocale:
          description: A locale identifier, supported for trglang.
          example: FR
          type: string
        name:
          description: A name for the project.
          example: My New Project
          type: string
        state:
          description: The project's state. The possible states are `backlog`, `inProgress`,
            `inReview`, `inQA`, and `done`.
          example: backlog
          type: string
        due_date:
          description: The due date. Measured in seconds since the Unix epoch.
          example: 1489147692
          type: integer
        archived:
          description: The archived state of the Project.
          example: false
          type: boolean
        metadata:
          description: A JSON object of key/value string pairs. Stores custom project
            information.
          example:
            connectorType: github
            notes: example metadata
          properties: {}
          type: object
        sample_review_percentage:
          description: The project's sample review percentage.
          example: 20
          type: integer
        created_at:
          description: Time at which the object was created. Measured in seconds since
            the Unix epoch.
          example: 1489147692
          type: integer
        updated_at:
          description: Time at which the object was created. Measured in seconds since
            the Unix epoch.
          example: 1489147692
          type: integer
        workflowStatus:
          description: The status of the Workflow for the current project. This may
            not be present for all project endpoints even with workflows enabled.
          enum:
          - READY_TO_START
          - IN_PROGRESS
          - DONE
          example: READY_TO_START
          type: string
        document:
          description: A list of Documents.
          items:
            $ref: '#/components/schemas/DocumentWithoutSegments'
          type: array
      type: object
    Segment:
      description: |
        A Segment is a source string and, optionally, its translation. A Segment can be associated with both a Memory and a Document. The Segment object contains additional metadata about the source and target strings.
      example:
        is_reviewed: true
        memory_id: 5678
        updated_at: 1489147692
        is_confirmed: true
        srclang: en
        created_at: 1489147692
        id: 84480010
        source: The red bus.
        document_id: 1234
        trglang: fr
        target: Le bus rouge.
      properties:
        id:
          description: A unique number identifying the Segment.
          example: 84480010
          format: int64
          type: integer
        created_at:
          description: Time at which the object was created. Measured in seconds since
            the Unix epoch.
          example: 1489147692
          type: integer
        updated_at:
          description: Time at which the object was created. Measured in seconds since
            the Unix epoch.
          example: 1489147692
          type: integer
        document_id:
          description: A unique Document identifier.
          example: 1234
          type: integer
        memory_id:
          description: The Memory with which this Segment is associated.
          example: 5678
          type: integer
        source:
          description: The source string.
          example: The red bus.
          type: string
        srclang:
          description: An ISO 639-1 language code.
          example: en
          type: string
        target:
          description: The target string.
          example: Le bus rouge.
          type: string
        trglang:
          description: An ISO 639-1 language code.
          example: fr
          type: string
        is_confirmed:
          description: The confirmation status.
          example: true
          type: boolean
        is_reviewed:
          description: The review status.
          example: true
          type: boolean
      type: object
    DocumentWithSegments:
      description: |
        A Document is a collection of zero or more Segments.
      example:
        srclang: en
        created_at: 1489147692
        reviewer_email: reviewer@example.com
        export_succeeded: false
        trglang: de
        is_review_complete: true
        import_in_progress: false
        segments:
        - is_reviewed: true
          memory_id: 5678
          updated_at: 1489147692
          is_confirmed: true
          srclang: en
          created_at: 1489147692
          id: 84480010
          source: The red bus.
          document_id: 1234
          trglang: fr
          target: Le bus rouge.
        - is_reviewed: true
          memory_id: 5678
          updated_at: 1489147692
          is_confirmed: true
          srclang: en
          created_at: 1489147692
          id: 84480010
          source: The red bus.
          document_id: 1234
          trglang: fr
          target: Le bus rouge.
        import_error_message: Could not parse XML.
        import_succeeded: false
        export_error_message: Could not parse XML.
        updated_at: 1489147692
        project_id: 287
        name: Introduction.xliff
        id: 46530
        export_in_progress: false
        is_pretranslating: false
        translator_email: translator@example.com
        status:
          pretranslation: idle
      properties:
        id:
          description: A unique number identifying the Document.
          example: 46530
          type: integer
        project_id:
          description: A unique number identifying the Project.
          example: 287
          type: integer
        srclang:
          description: An ISO 639-1 language identifier.
          example: en
          type: string
        trglang:
          description: An ISO 639-1 language identifier.
          example: de
          type: string
        name:
          description: The document name.
          example: Introduction.xliff
          type: string
        import_in_progress:
          description: True if the document is currently being imported
          example: false
          type: boolean
        import_succeeded:
          description: True if the import process succeeded.
          example: false
          type: boolean
        import_error_message:
          description: Error message if `import_succeeded=false`
          example: Could not parse XML.
          type: string
        export_in_progress:
          description: True if the document is currently being exported for download
          example: false
          type: boolean
        export_succeeded:
          description: True if the export process succeeded.
          example: false
          type: boolean
        export_error_message:
          description: Error message if `export_succeeded=false`
          example: Could not parse XML.
          type: string
        is_pretranslating:
          description: True if the document is currently being pretranslated.
          example: false
          type: boolean
        status:
          $ref: '#/components/schemas/DocumentWithoutSegments_status'
        translator_email:
          description: The email of the assigned translator.
          example: translator@example.com
          type: string
        reviewer_email:
          description: The email of the assigned reviewer.
          example: reviewer@example.com
          type: string
        created_at:
          description: Time at which the object was created. Measured in seconds since
            the Unix epoch.
          example: 1489147692
          type: integer
        updated_at:
          description: Time at which the object was created. Measured in seconds since
            the Unix epoch.
          example: 1489147692
          type: integer
        is_review_complete:
          description: Document review status.
          example: true
          type: boolean
        segments:
          description: A list of Segments.
          items:
            $ref: '#/components/schemas/Segment'
          type: array
      type: object
    SourceFile:
      description: A SourceFile is an unprocessed source file that can later be added
        to a project.
      example:
        detected_lang_confidence: 0.7
        file_hash: 3858f62230ac3c915f300c664312c63f
        updated_at: 2019-10-16T22:12:34Z
        name: en_US.json
        created_at: 2019-10-16T22:12:34Z
        id: 46530
        category: REFERENCE
        detected_lang: de
        labels: []
      properties:
        id:
          description: A unique number identifying the SourceFile.
          example: 46530
          type: integer
        name:
          description: The file name.
          example: en_US.json
          type: string
        file_hash:
          description: A unique hash value associated with the file. An MD5 hash of
            the file content will be used by default.
          example: 3858f62230ac3c915f300c664312c63f
          type: string
        detected_lang:
          description: Language associated with the file.
          example: de
          type: string
        detected_lang_confidence:
          description: Confidence score for the language associated with the file.
          example: 0.7
          type: number
        category:
          description: The category of the file. The options are `REFERENCE`, or `API`.
            The default is API. Files with the `REFERENCE` category will be displayed
            as reference material.
          example: REFERENCE
          type: string
        labels:
          description: The list of labels associated with the file.
          example: []
          items:
            type: string
          type: array
        created_at:
          description: Time at which the object was created.
          example: 2019-10-16T22:12:34Z
          format: date-time
          type: string
        updated_at:
          description: Time at which the object was created.
          example: 2019-10-16T22:12:34Z
          format: date-time
          type: string
      type: object
    webhook_response:
      example:
        webhookName: webhookName
        id: 12345
        eventType:
        - JOB_DELIVER
        - JOB_DELIVER
        webhookUrl: https://openapi-generator.tech
      properties:
        id:
          description: The unique identifier for the webhook configuration.
          example: 12345
          type: integer
        webhookName:
          description: The name of the webhook configuration.
          type: string
        webhookUrl:
          description: The URL to which the webhook notifications will be sent.
          format: uri
          type: string
        eventType:
          description: The list of event types that will trigger the webhook notification.
          items:
            enum:
            - JOB_DELIVER
            - JOB_UPDATE
            - PROJECT_DELIVER
            - PROJECT_UPDATE
            type: string
          type: array
      required:
      - eventType
      - id
      - webhookName
      - webhookUrl
      type: object
    create_webhook_options:
      properties:
        webhookName:
          description: The name of the webhook configuration.
          type: string
        webhookUrl:
          description: The URL to which the webhook notifications will be sent.
          format: uri
          type: string
        eventType:
          description: The list of event types that will trigger the webhook notification.
          items:
            enum:
            - JOB_DELIVER
            - JOB_UPDATE
            - PROJECT_DELIVER
            - PROJECT_UPDATE
            type: string
          type: array
      required:
      - eventType
      - webhookName
      - webhookUrl
      type: object
    LanguagesResponse:
      example:
        source_to_target:
          en:
            da: true
            de: true
            fr: true
            "...": '...'
          "...": '...'
        code_to_name:
          aa: Afar
          ab: Abkhazian
          af: Afrikaans
          "...": '...'
      properties:
        source_to_target:
          description: A two-dimensional object in which the first key is an ISO 639-1
            language code indicating the source, and the second key is an ISO 639-1
            language code indicating the target.
          example:
            en:
              da: true
              de: true
              fr: true
              "...": '...'
            "...": '...'
          properties: {}
          type: object
        code_to_name:
          description: An object in which the key is an ISO 639-1 language code, and
            the value is the language name.
          example:
            aa: Afar
            ab: Abkhazian
            af: Afrikaans
            "...": '...'
          properties: {}
          type: object
      title: LanguagesResponse
      type: object
    MemoryUpdateParameters:
      example:
        name: Automotive Memory
        id: 7246
      properties:
        id:
          description: A unique Memory identifier.
          example: 7246
          type: integer
        name:
          description: The Memory name.
          example: Automotive Memory
          type: string
      required:
      - id
      - name
      title: MemoryUpdateParameters
      type: object
    MemoryCreateParameters:
      example:
        trglocale: FR
        name: automotive
        srclang: en
        srclocale: US
        trglang: fr
      properties:
        name:
          description: A name for the Memory.
          example: automotive
          type: string
        srclang:
          description: An ISO 639-1 language identifier.
          example: en
          type: string
        trglang:
          description: An ISO 639-1 language identifier.
          example: fr
          type: string
        srclocale:
          description: An ISO 3166-1 region name for language locales
          example: US
          type: string
        trglocale:
          description: An ISO 3166-1 region name for language locales
          example: FR
          type: string
      required:
      - name
      - srclang
      - trglang
      title: MemoryCreateParameters
      type: object
    MemoryDeleteResponse:
      example:
        deleted: true
        id: 46530
      properties:
        id:
          description: A unique Memory identifier.
          example: 46530
          type: integer
        deleted:
          description: If the operation succeeded, then `true`. Otherwise, `false`.
          example: true
          type: boolean
      title: MemoryDeleteResponse
      type: object
    MemoryImportResponse:
      example:
        isProcessing: 1
        id: 123
      properties:
        id:
          description: A unique Memory identifier.
          example: 123
          type: integer
        isProcessing:
          description: The current state of the import.
          example: 1
          type: integer
      title: MemoryImportResponse
      type: object
    TermbaseExportResponse:
      example:
        id: 123
        is_processing: 1
      properties:
        id:
          description: A unique Memory identifier.
          example: 123
          type: integer
        is_processing:
          description: The current state of the import.
          example: 1
          type: integer
      title: TermbaseExportResponse
      type: object
    DeleteSegmentFromMemoryResponse:
      example:
        success: true
      properties:
        success:
          type: boolean
      title: DeleteSegmentFromMemoryResponse
      type: object
    TranslateSegmentBody:
      example:
        memory_id: 0
        tm_matches: true
        prefix: prefix
        containsICUData: false
        rich: false
        source: source
        source_hash: 6
        n: 1
        project_tags: false
      properties:
        source:
          description: A unique Segment identifier.
          type: string
        memory_id:
          description: A unique Memory identifier.
          type: integer
        source_hash:
          description: A source hash code.
          type: integer
        n:
          description: Return top n translations (deprecated).
          type: integer
        prefix:
          description: A target prefix
          type: string
        rich:
          default: false
          description: Returns rich translation information (e.g., with word alignments).
          type: boolean
        tm_matches:
          default: true
          description: Include translation memory fuzzy matches.
          type: boolean
        project_tags:
          default: false
          description: Project tags. Projects tags in source to target if set to true.
          type: boolean
        containsICUData:
          default: false
          description: Contains ICU data. If true then tags in the source following
            the ICU standard will be parsed and retained.
          type: boolean
      required:
      - memory_id
      title: TranslateSegmentBody
      type: object
    CreateConverterConfigParameters:
      example:
        signedAgreement: true
      properties:
        signedAgreement:
          description: Signifies that the Organization has signed the agreement or
            not.
          type: boolean
      required:
      - signedAgreement
      title: CreateConverterConfigParameters
      type: object
    signLiltCreateTermsResponse:
      example:
        signedAgreement: true
      properties:
        signedAgreement:
          description: Whether or not the agreement has been signed.
          example: true
          type: boolean
      title: signLiltCreateTermsResponse
      type: object
    getLiltCreateContentResponse:
      example:
        contents:
        - template: template
          preferences:
            styleguide: styleguide
            tone: tone
          name: name
          templateParams:
            summary: summary
            contentLength: 6
            language: language
            memoryId: 1
            sections:
            - sections
            - sections
          language: language
          id: 0
        - template: template
          preferences:
            styleguide: styleguide
            tone: tone
          name: name
          templateParams:
            summary: summary
            contentLength: 6
            language: language
            memoryId: 1
            sections:
            - sections
            - sections
          language: language
          id: 0
      properties:
        contents:
          description: List of LiltCreateContent objects
          items:
            $ref: '#/components/schemas/LiltCreateContent'
          type: array
      title: getLiltCreateContentResponse
      type: object
    inline_response_200:
      example:
        id: 0
      properties:
        id:
          description: The ID of the deleted Lilt Create content.
          type: integer
      type: object
    JobCreateParameters:
      example:
        languagePairs:
        - workflowStageAssignments:
          - workflowStageTemplateId: 12345
            userId: 123
            email: username@domain.com
          - workflowStageTemplateId: 12345
            userId: 123
            email: username@domain.com
          pretranslate: true
          trgLocale: DE
          caseSensitive: true
          dueDate: 2021-10-03T13:43:00.000Z
          workflowTemplateName: 0
          takeMatchAttribution: true
          externalModelId: 44
          workflowTemplateId: 14
          autoAccept: true
          configId: 2332
          memoryId: 1241
          trgLang: de
        - workflowStageAssignments:
          - workflowStageTemplateId: 12345
            userId: 123
            email: username@domain.com
          - workflowStageTemplateId: 12345
            userId: 123
            email: username@domain.com
          pretranslate: true
          trgLocale: DE
          caseSensitive: true
          dueDate: 2021-10-03T13:43:00.000Z
          workflowTemplateName: 0
          takeMatchAttribution: true
          externalModelId: 44
          workflowTemplateId: 14
          autoAccept: true
          configId: 2332
          memoryId: 1241
          trgLang: de
        workflowTemplateId: 6
        fileIds:
        - 298
        - 299
        due: 2021-10-05T14:48:00.000Z
        name: My new Job
        srcLocale: US
        isPlural: true
        srcLang: en
      properties:
        name:
          description: A name for the Job.
          example: My new Job
          type: string
        languagePairs:
          description: Language pairs is a set of one or more pairs that includes
            source language, source locale(optional), target language, target locale(optional),
            and memoryId.
          items:
            $ref: '#/components/schemas/LanguagePair'
          type: array
        fileIds:
          description: A list of file ids to upload to job creation.
          example:
          - 298
          - 299
          items:
            type: integer
          type: array
        due:
          description: An ISO string date representing job due date.
          example: 2021-10-05T14:48:00.000Z
          type: string
        srcLang:
          description: 2-letter ISO source language code
          example: en
          type: string
        srcLocale:
          description: 2-letter source language code
          example: US
          type: string
        isPlural:
          description: A boolean value representing if the files have plurals.
          example: true
          type: boolean
        workflowTemplateId:
          description: ID of the workflow template to be used. Use the [workflows
            templates endpoint](#tag/Workflows/operation/getWorkflowTemplates) to
            get the list of available workflows.
          type: integer
      required:
      - fileIds
      - languagePairs
      - name
      - srcLang
      - srcLocale
      title: JobCreateParameters
      type: object
    JobUpdateParameters:
      example:
        dueDate: 0
        name: My new Job
        isProcessing: ExportError
        processingErrorMsg: Authentication failed. Check your Contentful API Key.
      properties:
        name:
          description: A name for the Job.
          example: My new Job
          type: string
        dueDate:
          description: An ISO string date.
          type: integer
        isProcessing:
          description: |
            The processing status of the job. Provide one of the following
            integers to indicate the status.

            Ok = 0
            Started = 1
            ExportError = -2
          enum:
          - "0"
          - "1"
          - -2
          example: ExportError
          type: string
        processingErrorMsg:
          description: The processing error message.
          example: Authentication failed. Check your Contentful API Key.
          type: string
      title: JobUpdateParameters
      type: object
    JobDeleteResponse:
      example:
        id: 241
      properties:
        id:
          description: A unique Project identifier.
          example: 241
          type: integer
      title: JobDeleteResponse
      type: object
    ProjectCreateParameters:
      example:
        metadata:
          connectorType: github
          notes: example metadata
        memory_id: 1234
        workflowTemplateId: 14
        job_id: 1234
        name: My new project
        due_date: 1489147692
      properties:
        name:
          description: A name for the Project.
          example: My new project
          type: string
        memory_id:
          description: The Memory to associate with this new Project.
          example: 1234
          type: integer
        job_id:
          description: |
            The Job to associate with this new Project. If a Job ID is not
            provided then a new Job will be created to contain the
            Project.
          example: 1234
          type: integer
        due_date:
          description: The due date. Measured in seconds since the Unix epoch.
          example: 1489147692
          type: integer
        metadata:
          description: A JSON object of key/value string pairs. Stores custom project
            information.
          example:
            connectorType: github
            notes: example metadata
          properties: {}
          type: object
        workflowTemplateId:
          description: The workflow template used to create this project. WorkflowTemplateIds
            can be retrieved via the /workflows/templates endpoint. If not specified
            then the organization default workflowTemplateId will be used.
          example: 14
          type: integer
      required:
      - memory_id
      - name
      title: ProjectCreateParameters
      type: object
    ProjectDeleteResponse:
      example:
        deleted: true
        id: 46530
      properties:
        id:
          description: A unique Project identifier.
          example: 46530
          type: integer
        deleted:
          description: If the operation succeeded, then `true`. Otherwise, `false`.
          example: true
          type: boolean
      title: ProjectDeleteResponse
      type: object
    FileDeleteResponse:
      example:
        deleted: true
        id: 12345
      properties:
        id:
          description: A unique File identifier.
          example: 12345
          type: integer
        deleted:
          description: If the operation succeeded, then `true`. Otherwise, `false`.
          example: true
          type: boolean
      title: FileDeleteResponse
      type: object
    AddFileLabelRequest:
      example:
        name: label_name
      properties:
        name:
          description: The Label name.
          example: label_name
          type: string
      title: AddFileLabelRequest
      type: object
    inline_object:
      properties:
        webhookName:
          description: The name of the webhook configuration.
          type: string
        webhookUrl:
          description: The URL to which the webhook notifications will be sent.
          format: uri
          type: string
        eventType:
          description: The list of event types that will trigger the webhook notification.
          items:
            enum:
            - JOB_DELIVER
            - JOB_UPDATE
            - PROJECT_DELIVER
            - PROJECT_UPDATE
            type: string
          type: array
      required:
      - eventType
      - webhookName
      - webhookUrl
      type: object
    LiltCreateContent_templateParams:
      description: The template parameters of the content.
      example:
        summary: summary
        contentLength: 6
        language: language
        memoryId: 1
        sections:
        - sections
        - sections
      properties:
        contentLength:
          description: The length of the content.
          type: integer
        memoryId:
          description: The ID referencing a Data Source.
          type: integer
        language:
          description: The language of the content.
          type: string
        sections:
          description: The sections of the content.
          items:
            description: A section heading of the content.
            type: string
          type: array
        summary:
          description: The summary of the content.
          type: string
      required:
      - language
      type: object
    LiltCreateContent_preferences:
      description: The preferences of the content.
      example:
        styleguide: styleguide
        tone: tone
      properties:
        tone:
          description: The tone of the content.
          type: string
        styleguide:
          description: The styleguide of the content.
          type: string
      type: object
    DocumentWithoutSegments_status:
      description: A list of translations for the query term.
      example:
        pretranslation: idle
      properties:
        pretranslation:
          enum:
          - idle
          - pending
          - running
          example: idle
          type: string
      type: object
  securitySchemes:
    BasicAuth:
      scheme: basic
      type: http
    ApiKeyAuth:
      in: query
      name: key
      type: apiKey
x-original-swagger-version: "2.0"

